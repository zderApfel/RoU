[gd_scene load_steps=13 format=3 uid="uid://yp3kbmhj4ipg"]

[ext_resource type="Script" path="res://classes/items/scripts/Item.gd" id="1_fivw0"]
[ext_resource type="PackedScene" uid="uid://bh1sb00wmj044" path="res://assets/entities/arm.gltf" id="2_vjey0"]
[ext_resource type="Material" uid="uid://dpp750ow5d2hn" path="res://assets/shader_materials/skin/tone_1.tres" id="3_gs4co"]
[ext_resource type="Material" uid="uid://brnabpegesaeg" path="res://assets/shader_materials/cloth/cloth_green.tres" id="4_70cc1"]
[ext_resource type="PackedScene" uid="uid://5rhedeyt16o6" path="res://classes/technical/MeleeBox.tscn" id="5_jauwc"]

[sub_resource type="Animation" id="Animation_gglua"]
length = 0.001
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("left_arm:rotation")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Vector3(0, 0.572538, -1.13118)]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath("right_arm:rotation")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Vector3(0, -0.63324, 0.924414)]
}
tracks/2/type = "value"
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/path = NodePath("left_arm:position")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Vector3(-1.01334, 0, 0)]
}
tracks/3/type = "value"
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/path = NodePath("right_arm:position")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Vector3(1.05112, -0.202638, 0.0109913)]
}
tracks/4/type = "value"
tracks/4/imported = false
tracks/4/enabled = true
tracks/4/path = NodePath(".:block_inputs")
tracks/4/interp = 1
tracks/4/loop_wrap = true
tracks/4/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [false]
}
tracks/5/type = "value"
tracks/5/imported = false
tracks/5/enabled = true
tracks/5/path = NodePath("right_arm/right_meleebox:enabled")
tracks/5/interp = 1
tracks/5/loop_wrap = true
tracks/5/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [false]
}
tracks/6/type = "value"
tracks/6/imported = false
tracks/6/enabled = true
tracks/6/path = NodePath("left_arm/left_meleebox:enabled")
tracks/6/interp = 1
tracks/6/loop_wrap = true
tracks/6/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [false]
}

[sub_resource type="Animation" id="Animation_apok5"]
resource_name = "idle"
length = 2.0
loop_mode = 1
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("left_arm:rotation")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0, 0.00833333, 0.0166667, 0.025, 0.0333333, 0.0416667, 0.05, 0.0583333, 0.0666667, 0.075, 0.0833333, 0.0916667, 0.1, 0.108333, 0.116667, 0.125, 0.133333, 0.141667, 0.15, 0.158333, 0.166667, 0.175, 0.183333, 0.191667, 0.2, 0.208333, 0.216667, 0.225, 0.233333, 0.241667, 0.25, 0.258333, 0.266667, 0.275, 0.283333, 0.291667, 0.3, 0.308333, 0.316667, 0.325, 0.333333, 0.341667, 0.35, 0.358333, 0.366667, 0.375, 0.383333, 0.391667, 0.4, 0.408333, 0.416667, 0.425, 0.433333, 0.441667, 0.45, 0.458333, 0.466667, 0.475, 0.483333, 0.491667, 0.5, 0.508333, 0.516667, 0.525, 0.533333, 0.541667, 0.55, 0.558333, 0.566667, 0.575, 0.583333, 0.591667, 0.6, 0.608333, 0.616667, 0.625, 0.633333, 0.641667, 0.65, 0.658333, 0.666667, 0.675, 0.683333, 0.691667, 0.7, 0.708333, 0.716667, 0.725, 0.733333, 0.741667, 0.75, 0.758333, 0.766667, 0.775, 0.783333, 0.791667, 0.8, 0.808333, 0.816667, 0.825, 0.833333, 0.841667, 0.85, 0.858333, 0.866667, 0.875, 0.883333, 0.891667, 0.9, 0.908333, 0.916667, 0.925, 0.933333, 0.941667, 0.95, 0.958333, 0.966667, 0.975, 0.983333, 0.991667, 1, 1.00833, 1.01667, 1.025, 1.03333, 1.04167, 1.05, 1.05833, 1.06667, 1.075, 1.08333, 1.09167, 1.1, 1.10833, 1.11667, 1.125, 1.13333, 1.14167, 1.15, 1.15833, 1.16667, 1.175, 1.18333, 1.19167, 1.2, 1.20833, 1.21667, 1.225, 1.23333, 1.24167, 1.25, 1.25833, 1.26667, 1.275, 1.28333, 1.29167, 1.3, 1.30833, 1.31667, 1.325, 1.33333, 1.34167, 1.35, 1.35833, 1.36667, 1.375, 1.38333, 1.39167, 1.4, 1.40833, 1.41667, 1.425, 1.43333, 1.44167, 1.45, 1.45833, 1.46667, 1.475, 1.48333, 1.49167, 1.5, 1.50833, 1.51667, 1.525, 1.53333, 1.54167, 1.55, 1.55833, 1.56667, 1.575, 1.58333, 1.59167, 1.6, 1.60833, 1.61667, 1.625, 1.63333, 1.64167, 1.65, 1.65833, 1.66667, 1.675, 1.68333, 1.69167, 1.7, 1.70833, 1.71667, 1.725, 1.73333, 1.74167, 1.75, 1.75833, 1.76667, 1.775, 1.78333, 1.79167, 1.8, 1.80833, 1.81667, 1.825, 1.83333, 1.84167, 1.85, 1.85833, 1.86667, 1.875, 1.88333, 1.89167, 1.9, 1.90833, 1.91667, 1.925, 1.93333, 1.94167, 1.95, 1.95833, 1.96667, 1.975, 1.98333, 1.99167, 2),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 0,
"values": [Vector3(0, 0.572538, -1.13118), Vector3(-0.000628239, 0.572553, -1.13159), Vector3(-0.00125648, 0.572569, -1.13199), Vector3(-0.00188472, 0.572584, -1.1324), Vector3(-0.00251296, 0.572599, -1.1328), Vector3(-0.0031412, 0.572615, -1.13321), Vector3(-0.00376943, 0.57263, -1.13362), Vector3(-0.00439767, 0.572645, -1.13402), Vector3(-0.00502591, 0.572661, -1.13443), Vector3(-0.00565415, 0.572676, -1.13483), Vector3(-0.00628239, 0.572691, -1.13524), Vector3(-0.00691063, 0.572706, -1.13565), Vector3(-0.00753887, 0.572722, -1.13605), Vector3(-0.00816711, 0.572737, -1.13646), Vector3(-0.00879535, 0.572752, -1.13686), Vector3(-0.00942359, 0.572768, -1.13727), Vector3(-0.0100518, 0.572783, -1.13767), Vector3(-0.0106801, 0.572798, -1.13808), Vector3(-0.0113083, 0.572814, -1.13849), Vector3(-0.0119365, 0.572829, -1.13889), Vector3(-0.0125648, 0.572844, -1.1393), Vector3(-0.013193, 0.572859, -1.1397), Vector3(-0.0138213, 0.572875, -1.14011), Vector3(-0.0144495, 0.57289, -1.14052), Vector3(-0.0150777, 0.572905, -1.14092), Vector3(-0.015706, 0.572921, -1.14133), Vector3(-0.0163342, 0.572936, -1.14173), Vector3(-0.0169625, 0.572951, -1.14214), Vector3(-0.0175907, 0.572967, -1.14255), Vector3(-0.0182189, 0.572982, -1.14295), Vector3(-0.0188472, 0.572997, -1.14336), Vector3(-0.0194754, 0.573013, -1.14376), Vector3(-0.0201037, 0.573028, -1.14417), Vector3(-0.0207319, 0.573043, -1.14458), Vector3(-0.0213601, 0.573058, -1.14498), Vector3(-0.0219884, 0.573074, -1.14539), Vector3(-0.0226166, 0.573089, -1.14579), Vector3(-0.0232448, 0.573104, -1.1462), Vector3(-0.0238731, 0.57312, -1.1466), Vector3(-0.0245013, 0.573135, -1.14701), Vector3(-0.0251296, 0.57315, -1.14742), Vector3(-0.0257578, 0.573166, -1.14782), Vector3(-0.026386, 0.573181, -1.14823), Vector3(-0.0270143, 0.573196, -1.14863), Vector3(-0.0276425, 0.573212, -1.14904), Vector3(-0.0282708, 0.573227, -1.14945), Vector3(-0.028899, 0.573242, -1.14985), Vector3(-0.0295272, 0.573258, -1.15026), Vector3(-0.0301555, 0.573273, -1.15066), Vector3(-0.0307837, 0.573288, -1.15107), Vector3(-0.031412, 0.573303, -1.15148), Vector3(-0.0320402, 0.573319, -1.15188), Vector3(-0.0326684, 0.573334, -1.15229), Vector3(-0.0332967, 0.573349, -1.15269), Vector3(-0.0339249, 0.573365, -1.1531), Vector3(-0.0345532, 0.57338, -1.15351), Vector3(-0.0351814, 0.573395, -1.15391), Vector3(-0.0358096, 0.573411, -1.15432), Vector3(-0.0364379, 0.573426, -1.15472), Vector3(-0.0370661, 0.573441, -1.15513), Vector3(-0.0376943, 0.573457, -1.15553), Vector3(-0.0383226, 0.573472, -1.15594), Vector3(-0.0389508, 0.573487, -1.15635), Vector3(-0.0395791, 0.573502, -1.15675), Vector3(-0.0402073, 0.573518, -1.15716), Vector3(-0.0408355, 0.573533, -1.15756), Vector3(-0.0414638, 0.573548, -1.15797), Vector3(-0.042092, 0.573564, -1.15838), Vector3(-0.0427203, 0.573579, -1.15878), Vector3(-0.0433485, 0.573594, -1.15919), Vector3(-0.0439767, 0.57361, -1.15959), Vector3(-0.044605, 0.573625, -1.16), Vector3(-0.0452332, 0.57364, -1.16041), Vector3(-0.0458615, 0.573655, -1.16081), Vector3(-0.0464897, 0.573671, -1.16122), Vector3(-0.0471179, 0.573686, -1.16162), Vector3(-0.0477462, 0.573701, -1.16203), Vector3(-0.0483744, 0.573717, -1.16244), Vector3(-0.0490027, 0.573732, -1.16284), Vector3(-0.0496309, 0.573747, -1.16325), Vector3(-0.0502591, 0.573763, -1.16365), Vector3(-0.0508874, 0.573778, -1.16406), Vector3(-0.0515156, 0.573793, -1.16447), Vector3(-0.0521438, 0.573809, -1.16487), Vector3(-0.0527721, 0.573824, -1.16528), Vector3(-0.0534003, 0.573839, -1.16568), Vector3(-0.0540286, 0.573855, -1.16609), Vector3(-0.0546568, 0.57387, -1.16649), Vector3(-0.055285, 0.573885, -1.1669), Vector3(-0.0559133, 0.5739, -1.16731), Vector3(-0.0565415, 0.573916, -1.16771), Vector3(-0.0571698, 0.573931, -1.16812), Vector3(-0.057798, 0.573946, -1.16852), Vector3(-0.0584262, 0.573962, -1.16893), Vector3(-0.0590545, 0.573977, -1.16934), Vector3(-0.0596827, 0.573992, -1.16974), Vector3(-0.060311, 0.574008, -1.17015), Vector3(-0.0609392, 0.574023, -1.17055), Vector3(-0.0615674, 0.574038, -1.17096), Vector3(-0.0621957, 0.574054, -1.17137), Vector3(-0.0628239, 0.574069, -1.17177), Vector3(-0.0634522, 0.574084, -1.17218), Vector3(-0.0640804, 0.574099, -1.17258), Vector3(-0.0647086, 0.574115, -1.17299), Vector3(-0.0653369, 0.57413, -1.1734), Vector3(-0.0659651, 0.574145, -1.1738), Vector3(-0.0665933, 0.574161, -1.17421), Vector3(-0.0672216, 0.574176, -1.17461), Vector3(-0.0678498, 0.574191, -1.17502), Vector3(-0.0684781, 0.574207, -1.17542), Vector3(-0.0691063, 0.574222, -1.17583), Vector3(-0.0697346, 0.574237, -1.17624), Vector3(-0.0703628, 0.574252, -1.17664), Vector3(-0.070991, 0.574268, -1.17705), Vector3(-0.0716193, 0.574283, -1.17745), Vector3(-0.0722475, 0.574298, -1.17786), Vector3(-0.0728757, 0.574314, -1.17827), Vector3(-0.073504, 0.574329, -1.17867), Vector3(-0.0741322, 0.574344, -1.17908), Vector3(-0.0747605, 0.57436, -1.17948), Vector3(-0.0753887, 0.574375, -1.17989), Vector3(-0.0747605, 0.57436, -1.17948), Vector3(-0.0741322, 0.574344, -1.17908), Vector3(-0.073504, 0.574329, -1.17867), Vector3(-0.0728757, 0.574314, -1.17827), Vector3(-0.0722475, 0.574298, -1.17786), Vector3(-0.0716193, 0.574283, -1.17745), Vector3(-0.070991, 0.574268, -1.17705), Vector3(-0.0703628, 0.574252, -1.17664), Vector3(-0.0697345, 0.574237, -1.17624), Vector3(-0.0691063, 0.574222, -1.17583), Vector3(-0.0684781, 0.574207, -1.17542), Vector3(-0.0678498, 0.574191, -1.17502), Vector3(-0.0672216, 0.574176, -1.17461), Vector3(-0.0665933, 0.574161, -1.17421), Vector3(-0.0659651, 0.574145, -1.1738), Vector3(-0.0653369, 0.57413, -1.1734), Vector3(-0.0647086, 0.574115, -1.17299), Vector3(-0.0640804, 0.574099, -1.17258), Vector3(-0.0634522, 0.574084, -1.17218), Vector3(-0.0628239, 0.574069, -1.17177), Vector3(-0.0621957, 0.574054, -1.17137), Vector3(-0.0615674, 0.574038, -1.17096), Vector3(-0.0609392, 0.574023, -1.17055), Vector3(-0.060311, 0.574008, -1.17015), Vector3(-0.0596827, 0.573992, -1.16974), Vector3(-0.0590545, 0.573977, -1.16934), Vector3(-0.0584262, 0.573962, -1.16893), Vector3(-0.057798, 0.573946, -1.16852), Vector3(-0.0571698, 0.573931, -1.16812), Vector3(-0.0565415, 0.573916, -1.16771), Vector3(-0.0559133, 0.5739, -1.16731), Vector3(-0.055285, 0.573885, -1.1669), Vector3(-0.0546568, 0.57387, -1.16649), Vector3(-0.0540286, 0.573855, -1.16609), Vector3(-0.0534003, 0.573839, -1.16568), Vector3(-0.0527721, 0.573824, -1.16528), Vector3(-0.0521438, 0.573809, -1.16487), Vector3(-0.0515156, 0.573793, -1.16447), Vector3(-0.0508874, 0.573778, -1.16406), Vector3(-0.0502591, 0.573763, -1.16365), Vector3(-0.0496309, 0.573747, -1.16325), Vector3(-0.0490027, 0.573732, -1.16284), Vector3(-0.0483744, 0.573717, -1.16244), Vector3(-0.0477462, 0.573701, -1.16203), Vector3(-0.0471179, 0.573686, -1.16162), Vector3(-0.0464897, 0.573671, -1.16122), Vector3(-0.0458615, 0.573655, -1.16081), Vector3(-0.0452332, 0.57364, -1.16041), Vector3(-0.044605, 0.573625, -1.16), Vector3(-0.0439767, 0.57361, -1.15959), Vector3(-0.0433485, 0.573594, -1.15919), Vector3(-0.0427203, 0.573579, -1.15878), Vector3(-0.042092, 0.573564, -1.15838), Vector3(-0.0414638, 0.573548, -1.15797), Vector3(-0.0408355, 0.573533, -1.15756), Vector3(-0.0402073, 0.573518, -1.15716), Vector3(-0.0395791, 0.573502, -1.15675), Vector3(-0.0389508, 0.573487, -1.15635), Vector3(-0.0383226, 0.573472, -1.15594), Vector3(-0.0376943, 0.573457, -1.15553), Vector3(-0.0370661, 0.573441, -1.15513), Vector3(-0.0364379, 0.573426, -1.15472), Vector3(-0.0358096, 0.573411, -1.15432), Vector3(-0.0351814, 0.573395, -1.15391), Vector3(-0.0345532, 0.57338, -1.15351), Vector3(-0.0339249, 0.573365, -1.1531), Vector3(-0.0332967, 0.573349, -1.15269), Vector3(-0.0326684, 0.573334, -1.15229), Vector3(-0.0320402, 0.573319, -1.15188), Vector3(-0.031412, 0.573303, -1.15148), Vector3(-0.0307837, 0.573288, -1.15107), Vector3(-0.0301555, 0.573273, -1.15066), Vector3(-0.0295272, 0.573258, -1.15026), Vector3(-0.028899, 0.573242, -1.14985), Vector3(-0.0282708, 0.573227, -1.14945), Vector3(-0.0276425, 0.573212, -1.14904), Vector3(-0.0270143, 0.573196, -1.14863), Vector3(-0.026386, 0.573181, -1.14823), Vector3(-0.0257578, 0.573166, -1.14782), Vector3(-0.0251296, 0.57315, -1.14742), Vector3(-0.0245013, 0.573135, -1.14701), Vector3(-0.0238731, 0.57312, -1.1466), Vector3(-0.0232449, 0.573104, -1.1462), Vector3(-0.0226166, 0.573089, -1.14579), Vector3(-0.0219884, 0.573074, -1.14539), Vector3(-0.0213601, 0.573058, -1.14498), Vector3(-0.0207319, 0.573043, -1.14458), Vector3(-0.0201037, 0.573028, -1.14417), Vector3(-0.0194754, 0.573013, -1.14376), Vector3(-0.0188472, 0.572997, -1.14336), Vector3(-0.0182189, 0.572982, -1.14295), Vector3(-0.0175907, 0.572967, -1.14255), Vector3(-0.0169625, 0.572951, -1.14214), Vector3(-0.0163342, 0.572936, -1.14173), Vector3(-0.015706, 0.572921, -1.14133), Vector3(-0.0150777, 0.572905, -1.14092), Vector3(-0.0144495, 0.57289, -1.14052), Vector3(-0.0138213, 0.572875, -1.14011), Vector3(-0.013193, 0.572859, -1.1397), Vector3(-0.0125648, 0.572844, -1.1393), Vector3(-0.0119365, 0.572829, -1.13889), Vector3(-0.0113083, 0.572814, -1.13849), Vector3(-0.0106801, 0.572798, -1.13808), Vector3(-0.0100518, 0.572783, -1.13767), Vector3(-0.00942358, 0.572768, -1.13727), Vector3(-0.00879535, 0.572752, -1.13686), Vector3(-0.00816711, 0.572737, -1.13646), Vector3(-0.00753887, 0.572722, -1.13605), Vector3(-0.00691063, 0.572706, -1.13565), Vector3(-0.00628239, 0.572691, -1.13524), Vector3(-0.00565415, 0.572676, -1.13483), Vector3(-0.00502592, 0.572661, -1.13443), Vector3(-0.00439768, 0.572645, -1.13402), Vector3(-0.00376943, 0.57263, -1.13362), Vector3(-0.00314119, 0.572615, -1.13321), Vector3(-0.00251296, 0.572599, -1.1328), Vector3(-0.00188471, 0.572584, -1.1324), Vector3(-0.00125648, 0.572569, -1.13199), Vector3(-0.00062824, 0.572553, -1.13159), Vector3(0, 0.572538, -1.13118)]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath("right_arm:rotation")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0, 0.00833333, 0.0166667, 0.025, 0.0333333, 0.0416667, 0.05, 0.0583333, 0.0666667, 0.075, 0.0833333, 0.0916667, 0.1, 0.108333, 0.116667, 0.125, 0.133333, 0.141667, 0.15, 0.158333, 0.166667, 0.175, 0.183333, 0.191667, 0.2, 0.208333, 0.216667, 0.225, 0.233333, 0.241667, 0.25, 0.258333, 0.266667, 0.275, 0.283333, 0.291667, 0.3, 0.308333, 0.316667, 0.325, 0.333333, 0.341667, 0.35, 0.358333, 0.366667, 0.375, 0.383333, 0.391667, 0.4, 0.408333, 0.416667, 0.425, 0.433333, 0.441667, 0.45, 0.458333, 0.466667, 0.475, 0.483333, 0.491667, 0.5, 0.508333, 0.516667, 0.525, 0.533333, 0.541667, 0.55, 0.558333, 0.566667, 0.575, 0.583333, 0.591667, 0.6, 0.608333, 0.616667, 0.625, 0.633333, 0.641667, 0.65, 0.658333, 0.666667, 0.675, 0.683333, 0.691667, 0.7, 0.708333, 0.716667, 0.725, 0.733333, 0.741667, 0.75, 0.758333, 0.766667, 0.775, 0.783333, 0.791667, 0.8, 0.808333, 0.816667, 0.825, 0.833333, 0.841667, 0.85, 0.858333, 0.866667, 0.875, 0.883333, 0.891667, 0.9, 0.908333, 0.916667, 0.925, 0.933333, 0.941667, 0.95, 0.958333, 0.966667, 0.975, 0.983333, 0.991667, 1, 1.00833, 1.01667, 1.025, 1.03333, 1.04167, 1.05, 1.05833, 1.06667, 1.075, 1.08333, 1.09167, 1.1, 1.10833, 1.11667, 1.125, 1.13333, 1.14167, 1.15, 1.15833, 1.16667, 1.175, 1.18333, 1.19167, 1.2, 1.20833, 1.21667, 1.225, 1.23333, 1.24167, 1.25, 1.25833, 1.26667, 1.275, 1.28333, 1.29167, 1.3, 1.30833, 1.31667, 1.325, 1.33333, 1.34167, 1.35, 1.35833, 1.36667, 1.375, 1.38333, 1.39167, 1.4, 1.40833, 1.41667, 1.425, 1.43333, 1.44167, 1.45, 1.45833, 1.46667, 1.475, 1.48333, 1.49167, 1.5, 1.50833, 1.51667, 1.525, 1.53333, 1.54167, 1.55, 1.55833, 1.56667, 1.575, 1.58333, 1.59167, 1.6, 1.60833, 1.61667, 1.625, 1.63333, 1.64167, 1.65, 1.65833, 1.66667, 1.675, 1.68333, 1.69167, 1.7, 1.70833, 1.71667, 1.725, 1.73333, 1.74167, 1.75, 1.75833, 1.76667, 1.775, 1.78333, 1.79167, 1.8, 1.80833, 1.81667, 1.825, 1.83333, 1.84167, 1.85, 1.85833, 1.86667, 1.875, 1.88333, 1.89167, 1.9, 1.90833, 1.91667, 1.925, 1.93333, 1.94167, 1.95, 1.95833, 1.96667, 1.975, 1.98333, 1.99167, 2),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 0,
"values": [Vector3(0, -0.63324, 0.924414), Vector3(-0.000497192, -0.633251, 0.92478), Vector3(-0.000994383, -0.633262, 0.925145), Vector3(-0.00149158, -0.633273, 0.925511), Vector3(-0.00198877, -0.633284, 0.925876), Vector3(-0.00248596, -0.633295, 0.926242), Vector3(-0.00298315, -0.633305, 0.926607), Vector3(-0.00348034, -0.633316, 0.926973), Vector3(-0.00397753, -0.633327, 0.927338), Vector3(-0.00447473, -0.633338, 0.927704), Vector3(-0.00497192, -0.633349, 0.928069), Vector3(-0.00546911, -0.63336, 0.928435), Vector3(-0.0059663, -0.633371, 0.9288), Vector3(-0.00646349, -0.633382, 0.929166), Vector3(-0.00696068, -0.633393, 0.929531), Vector3(-0.00745788, -0.633404, 0.929897), Vector3(-0.00795507, -0.633415, 0.930263), Vector3(-0.00845226, -0.633425, 0.930628), Vector3(-0.00894945, -0.633436, 0.930994), Vector3(-0.00944664, -0.633447, 0.931359), Vector3(-0.00994383, -0.633458, 0.931725), Vector3(-0.010441, -0.633469, 0.93209), Vector3(-0.0109382, -0.63348, 0.932456), Vector3(-0.0114354, -0.633491, 0.932821), Vector3(-0.0119326, -0.633502, 0.933187), Vector3(-0.0124298, -0.633513, 0.933552), Vector3(-0.012927, -0.633524, 0.933918), Vector3(-0.0134242, -0.633534, 0.934283), Vector3(-0.0139214, -0.633545, 0.934649), Vector3(-0.0144186, -0.633556, 0.935014), Vector3(-0.0149158, -0.633567, 0.93538), Vector3(-0.0154129, -0.633578, 0.935746), Vector3(-0.0159101, -0.633589, 0.936111), Vector3(-0.0164073, -0.6336, 0.936477), Vector3(-0.0169045, -0.633611, 0.936842), Vector3(-0.0174017, -0.633622, 0.937208), Vector3(-0.0178989, -0.633633, 0.937573), Vector3(-0.0183961, -0.633644, 0.937939), Vector3(-0.0188933, -0.633655, 0.938304), Vector3(-0.0193905, -0.633665, 0.93867), Vector3(-0.0198877, -0.633676, 0.939035), Vector3(-0.0203849, -0.633687, 0.939401), Vector3(-0.020882, -0.633698, 0.939766), Vector3(-0.0213792, -0.633709, 0.940132), Vector3(-0.0218764, -0.63372, 0.940497), Vector3(-0.0223736, -0.633731, 0.940863), Vector3(-0.0228708, -0.633742, 0.941229), Vector3(-0.023368, -0.633753, 0.941594), Vector3(-0.0238652, -0.633764, 0.94196), Vector3(-0.0243624, -0.633775, 0.942325), Vector3(-0.0248596, -0.633785, 0.942691), Vector3(-0.0253568, -0.633796, 0.943056), Vector3(-0.025854, -0.633807, 0.943422), Vector3(-0.0263512, -0.633818, 0.943787), Vector3(-0.0268483, -0.633829, 0.944153), Vector3(-0.0273455, -0.63384, 0.944518), Vector3(-0.0278427, -0.633851, 0.944884), Vector3(-0.0283399, -0.633862, 0.945249), Vector3(-0.0288371, -0.633873, 0.945615), Vector3(-0.0293343, -0.633884, 0.94598), Vector3(-0.0298315, -0.633895, 0.946346), Vector3(-0.0303287, -0.633905, 0.946712), Vector3(-0.0308259, -0.633916, 0.947077), Vector3(-0.0313231, -0.633927, 0.947443), Vector3(-0.0318203, -0.633938, 0.947808), Vector3(-0.0323175, -0.633949, 0.948174), Vector3(-0.0328147, -0.63396, 0.948539), Vector3(-0.0333118, -0.633971, 0.948905), Vector3(-0.033809, -0.633982, 0.94927), Vector3(-0.0343062, -0.633993, 0.949636), Vector3(-0.0348034, -0.634004, 0.950001), Vector3(-0.0353006, -0.634014, 0.950367), Vector3(-0.0357978, -0.634025, 0.950732), Vector3(-0.036295, -0.634036, 0.951098), Vector3(-0.0367922, -0.634047, 0.951463), Vector3(-0.0372894, -0.634058, 0.951829), Vector3(-0.0377866, -0.634069, 0.952195), Vector3(-0.0382838, -0.63408, 0.95256), Vector3(-0.038781, -0.634091, 0.952926), Vector3(-0.0392781, -0.634102, 0.953291), Vector3(-0.0397753, -0.634113, 0.953657), Vector3(-0.0402725, -0.634124, 0.954022), Vector3(-0.0407697, -0.634134, 0.954388), Vector3(-0.0412669, -0.634145, 0.954753), Vector3(-0.0417641, -0.634156, 0.955119), Vector3(-0.0422613, -0.634167, 0.955484), Vector3(-0.0427585, -0.634178, 0.95585), Vector3(-0.0432557, -0.634189, 0.956215), Vector3(-0.0437529, -0.6342, 0.956581), Vector3(-0.0442501, -0.634211, 0.956946), Vector3(-0.0447473, -0.634222, 0.957312), Vector3(-0.0452444, -0.634233, 0.957678), Vector3(-0.0457416, -0.634244, 0.958043), Vector3(-0.0462388, -0.634255, 0.958409), Vector3(-0.046736, -0.634265, 0.958774), Vector3(-0.0472332, -0.634276, 0.95914), Vector3(-0.0477304, -0.634287, 0.959505), Vector3(-0.0482276, -0.634298, 0.959871), Vector3(-0.0487248, -0.634309, 0.960236), Vector3(-0.049222, -0.63432, 0.960602), Vector3(-0.0497192, -0.634331, 0.960967), Vector3(-0.0502164, -0.634342, 0.961333), Vector3(-0.0507136, -0.634353, 0.961698), Vector3(-0.0512107, -0.634364, 0.962064), Vector3(-0.0517079, -0.634374, 0.962429), Vector3(-0.0522051, -0.634385, 0.962795), Vector3(-0.0527023, -0.634396, 0.963161), Vector3(-0.0531995, -0.634407, 0.963526), Vector3(-0.0536967, -0.634418, 0.963892), Vector3(-0.0541939, -0.634429, 0.964257), Vector3(-0.0546911, -0.63444, 0.964623), Vector3(-0.0551883, -0.634451, 0.964988), Vector3(-0.0556855, -0.634462, 0.965354), Vector3(-0.0561827, -0.634473, 0.965719), Vector3(-0.0566799, -0.634484, 0.966085), Vector3(-0.057177, -0.634494, 0.96645), Vector3(-0.0576742, -0.634505, 0.966816), Vector3(-0.0581714, -0.634516, 0.967181), Vector3(-0.0586686, -0.634527, 0.967547), Vector3(-0.0591658, -0.634538, 0.967912), Vector3(-0.059663, -0.634549, 0.968278), Vector3(-0.0591658, -0.634538, 0.967912), Vector3(-0.0586686, -0.634527, 0.967547), Vector3(-0.0581714, -0.634516, 0.967181), Vector3(-0.0576742, -0.634505, 0.966816), Vector3(-0.057177, -0.634494, 0.96645), Vector3(-0.0566799, -0.634484, 0.966085), Vector3(-0.0561827, -0.634473, 0.965719), Vector3(-0.0556855, -0.634462, 0.965354), Vector3(-0.0551883, -0.634451, 0.964988), Vector3(-0.0546911, -0.63444, 0.964623), Vector3(-0.0541939, -0.634429, 0.964257), Vector3(-0.0536967, -0.634418, 0.963892), Vector3(-0.0531995, -0.634407, 0.963526), Vector3(-0.0527023, -0.634396, 0.963161), Vector3(-0.0522051, -0.634385, 0.962795), Vector3(-0.0517079, -0.634374, 0.962429), Vector3(-0.0512107, -0.634364, 0.962064), Vector3(-0.0507136, -0.634353, 0.961698), Vector3(-0.0502164, -0.634342, 0.961333), Vector3(-0.0497192, -0.634331, 0.960967), Vector3(-0.049222, -0.63432, 0.960602), Vector3(-0.0487248, -0.634309, 0.960236), Vector3(-0.0482276, -0.634298, 0.959871), Vector3(-0.0477304, -0.634287, 0.959505), Vector3(-0.0472332, -0.634276, 0.95914), Vector3(-0.046736, -0.634265, 0.958774), Vector3(-0.0462388, -0.634255, 0.958409), Vector3(-0.0457416, -0.634244, 0.958043), Vector3(-0.0452444, -0.634233, 0.957678), Vector3(-0.0447473, -0.634222, 0.957312), Vector3(-0.0442501, -0.634211, 0.956946), Vector3(-0.0437529, -0.6342, 0.956581), Vector3(-0.0432557, -0.634189, 0.956215), Vector3(-0.0427585, -0.634178, 0.95585), Vector3(-0.0422613, -0.634167, 0.955484), Vector3(-0.0417641, -0.634156, 0.955119), Vector3(-0.0412669, -0.634145, 0.954753), Vector3(-0.0407697, -0.634134, 0.954388), Vector3(-0.0402725, -0.634124, 0.954022), Vector3(-0.0397753, -0.634113, 0.953657), Vector3(-0.0392781, -0.634102, 0.953291), Vector3(-0.038781, -0.634091, 0.952926), Vector3(-0.0382838, -0.63408, 0.95256), Vector3(-0.0377866, -0.634069, 0.952195), Vector3(-0.0372894, -0.634058, 0.951829), Vector3(-0.0367922, -0.634047, 0.951463), Vector3(-0.036295, -0.634036, 0.951098), Vector3(-0.0357978, -0.634025, 0.950732), Vector3(-0.0353006, -0.634014, 0.950367), Vector3(-0.0348034, -0.634004, 0.950001), Vector3(-0.0343062, -0.633993, 0.949636), Vector3(-0.033809, -0.633982, 0.94927), Vector3(-0.0333118, -0.633971, 0.948905), Vector3(-0.0328147, -0.63396, 0.948539), Vector3(-0.0323175, -0.633949, 0.948174), Vector3(-0.0318203, -0.633938, 0.947808), Vector3(-0.0313231, -0.633927, 0.947443), Vector3(-0.0308259, -0.633916, 0.947077), Vector3(-0.0303287, -0.633905, 0.946712), Vector3(-0.0298315, -0.633895, 0.946346), Vector3(-0.0293343, -0.633884, 0.94598), Vector3(-0.0288371, -0.633873, 0.945615), Vector3(-0.0283399, -0.633862, 0.945249), Vector3(-0.0278427, -0.633851, 0.944884), Vector3(-0.0273455, -0.63384, 0.944518), Vector3(-0.0268483, -0.633829, 0.944153), Vector3(-0.0263512, -0.633818, 0.943787), Vector3(-0.025854, -0.633807, 0.943422), Vector3(-0.0253568, -0.633796, 0.943056), Vector3(-0.0248596, -0.633785, 0.942691), Vector3(-0.0243624, -0.633775, 0.942325), Vector3(-0.0238652, -0.633764, 0.94196), Vector3(-0.023368, -0.633753, 0.941594), Vector3(-0.0228708, -0.633742, 0.941229), Vector3(-0.0223736, -0.633731, 0.940863), Vector3(-0.0218764, -0.63372, 0.940497), Vector3(-0.0213792, -0.633709, 0.940132), Vector3(-0.0208821, -0.633698, 0.939766), Vector3(-0.0203849, -0.633687, 0.939401), Vector3(-0.0198877, -0.633676, 0.939035), Vector3(-0.0193905, -0.633665, 0.93867), Vector3(-0.0188933, -0.633655, 0.938304), Vector3(-0.0183961, -0.633644, 0.937939), Vector3(-0.0178989, -0.633633, 0.937573), Vector3(-0.0174017, -0.633622, 0.937208), Vector3(-0.0169045, -0.633611, 0.936842), Vector3(-0.0164073, -0.6336, 0.936477), Vector3(-0.0159101, -0.633589, 0.936111), Vector3(-0.0154129, -0.633578, 0.935746), Vector3(-0.0149157, -0.633567, 0.93538), Vector3(-0.0144186, -0.633556, 0.935014), Vector3(-0.0139214, -0.633545, 0.934649), Vector3(-0.0134242, -0.633534, 0.934283), Vector3(-0.012927, -0.633524, 0.933918), Vector3(-0.0124298, -0.633513, 0.933552), Vector3(-0.0119326, -0.633502, 0.933187), Vector3(-0.0114354, -0.633491, 0.932821), Vector3(-0.0109382, -0.63348, 0.932456), Vector3(-0.010441, -0.633469, 0.93209), Vector3(-0.00994384, -0.633458, 0.931725), Vector3(-0.00944664, -0.633447, 0.931359), Vector3(-0.00894945, -0.633436, 0.930994), Vector3(-0.00845226, -0.633425, 0.930628), Vector3(-0.00795507, -0.633415, 0.930263), Vector3(-0.00745787, -0.633404, 0.929897), Vector3(-0.00696068, -0.633393, 0.929531), Vector3(-0.00646349, -0.633382, 0.929166), Vector3(-0.0059663, -0.633371, 0.9288), Vector3(-0.00546911, -0.63336, 0.928435), Vector3(-0.00497191, -0.633349, 0.928069), Vector3(-0.00447473, -0.633338, 0.927704), Vector3(-0.00397753, -0.633327, 0.927338), Vector3(-0.00348034, -0.633316, 0.926973), Vector3(-0.00298315, -0.633305, 0.926607), Vector3(-0.00248596, -0.633295, 0.926242), Vector3(-0.00198877, -0.633284, 0.925876), Vector3(-0.00149157, -0.633273, 0.925511), Vector3(-0.000994381, -0.633262, 0.925145), Vector3(-0.000497192, -0.633251, 0.92478), Vector3(0, -0.63324, 0.924414)]
}
tracks/2/type = "value"
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/path = NodePath("left_arm:position")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/keys = {
"times": PackedFloat32Array(0, 0.00833333, 0.0166667, 0.025, 0.0333333, 0.0416667, 0.05, 0.0583333, 0.0666667, 0.075, 0.0833333, 0.0916667, 0.1, 0.108333, 0.116667, 0.125, 0.133333, 0.141667, 0.15, 0.158333, 0.166667, 0.175, 0.183333, 0.191667, 0.2, 0.208333, 0.216667, 0.225, 0.233333, 0.241667, 0.25, 0.258333, 0.266667, 0.275, 0.283333, 0.291667, 0.3, 0.308333, 0.316667, 0.325, 0.333333, 0.341667, 0.35, 0.358333, 0.366667, 0.375, 0.383333, 0.391667, 0.4, 0.408333, 0.416667, 0.425, 0.433333, 0.441667, 0.45, 0.458333, 0.466667, 0.475, 0.483333, 0.491667, 0.5, 0.508333, 0.516667, 0.525, 0.533333, 0.541667, 0.55, 0.558333, 0.566667, 0.575, 0.583333, 0.591667, 0.6, 0.608333, 0.616667, 0.625, 0.633333, 0.641667, 0.65, 0.658333, 0.666667, 0.675, 0.683333, 0.691667, 0.7, 0.708333, 0.716667, 0.725, 0.733333, 0.741667, 0.75, 0.758333, 0.766667, 0.775, 0.783333, 0.791667, 0.8, 0.808333, 0.816667, 0.825, 0.833333, 0.841667, 0.85, 0.858333, 0.866667, 0.875, 0.883333, 0.891667, 0.9, 0.908333, 0.916667, 0.925, 0.933333, 0.941667, 0.95, 0.958333, 0.966667, 0.975, 0.983333, 0.991667, 1, 1.00833, 1.01667, 1.025, 1.03333, 1.04167, 1.05, 1.05833, 1.06667, 1.075, 1.08333, 1.09167, 1.1, 1.10833, 1.11667, 1.125, 1.13333, 1.14167, 1.15, 1.15833, 1.16667, 1.175, 1.18333, 1.19167, 1.2, 1.20833, 1.21667, 1.225, 1.23333, 1.24167, 1.25, 1.25833, 1.26667, 1.275, 1.28333, 1.29167, 1.3, 1.30833, 1.31667, 1.325, 1.33333, 1.34167, 1.35, 1.35833, 1.36667, 1.375, 1.38333, 1.39167, 1.4, 1.40833, 1.41667, 1.425, 1.43333, 1.44167, 1.45, 1.45833, 1.46667, 1.475, 1.48333, 1.49167, 1.5, 1.50833, 1.51667, 1.525, 1.53333, 1.54167, 1.55, 1.55833, 1.56667, 1.575, 1.58333, 1.59167, 1.6, 1.60833, 1.61667, 1.625, 1.63333, 1.64167, 1.65, 1.65833, 1.66667, 1.675, 1.68333, 1.69167, 1.7, 1.70833, 1.71667, 1.725, 1.73333, 1.74167, 1.75, 1.75833, 1.76667, 1.775, 1.78333, 1.79167, 1.8, 1.80833, 1.81667, 1.825, 1.83333, 1.84167, 1.85, 1.85833, 1.86667, 1.875, 1.88333, 1.89167, 1.9, 1.90833, 1.91667, 1.925, 1.93333, 1.94167, 1.95, 1.95833, 1.96667, 1.975, 1.98333, 1.99167, 2),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 0,
"values": [Vector3(-1.01334, 0, 0), Vector3(-1.01334, 0, 0), Vector3(-1.01334, 0, 0), Vector3(-1.01334, 0, 0), Vector3(-1.01334, 0, 0), Vector3(-1.01334, 0, 0), Vector3(-1.01334, 0, 0), Vector3(-1.01334, 0, 0), Vector3(-1.01334, 0, 0), Vector3(-1.01334, 0, 0), Vector3(-1.01334, 0, 0), Vector3(-1.01334, 0, 0), Vector3(-1.01334, 0, 0), Vector3(-1.01334, 0, 0), Vector3(-1.01334, 0, 0), Vector3(-1.01334, 0, 0), Vector3(-1.01334, 0, 0), Vector3(-1.01334, 0, 0), Vector3(-1.01334, 0, 0), Vector3(-1.01334, 0, 0), Vector3(-1.01334, 0, 0), Vector3(-1.01334, 0, 0), Vector3(-1.01334, 0, 0), Vector3(-1.01334, 0, 0), Vector3(-1.01334, 0, 0), Vector3(-1.01334, 0, 0), Vector3(-1.01334, 0, 0), Vector3(-1.01334, 0, 0), Vector3(-1.01334, 0, 0), Vector3(-1.01334, 0, 0), Vector3(-1.01334, 0, 0), Vector3(-1.01334, 0, 0), Vector3(-1.01334, 0, 0), Vector3(-1.01334, 0, 0), Vector3(-1.01334, 0, 0), Vector3(-1.01334, 0, 0), Vector3(-1.01334, 0, 0), Vector3(-1.01334, 0, 0), Vector3(-1.01334, 0, 0), Vector3(-1.01334, 0, 0), Vector3(-1.01334, 0, 0), Vector3(-1.01334, 0, 0), Vector3(-1.01334, 0, 0), Vector3(-1.01334, 0, 0), Vector3(-1.01334, 0, 0), Vector3(-1.01334, 0, 0), Vector3(-1.01334, 0, 0), Vector3(-1.01334, 0, 0), Vector3(-1.01334, 0, 0), Vector3(-1.01334, 0, 0), Vector3(-1.01334, 0, 0), Vector3(-1.01334, 0, 0), Vector3(-1.01334, 0, 0), Vector3(-1.01334, 0, 0), Vector3(-1.01334, 0, 0), Vector3(-1.01334, 0, 0), Vector3(-1.01334, 0, 0), Vector3(-1.01334, 0, 0), Vector3(-1.01334, 0, 0), Vector3(-1.01334, 0, 0), Vector3(-1.01334, 0, 0), Vector3(-1.01334, 0, 0), Vector3(-1.01334, 0, 0), Vector3(-1.01334, 0, 0), Vector3(-1.01334, 0, 0), Vector3(-1.01334, 0, 0), Vector3(-1.01334, 0, 0), Vector3(-1.01334, 0, 0), Vector3(-1.01334, 0, 0), Vector3(-1.01334, 0, 0), Vector3(-1.01334, 0, 0), Vector3(-1.01334, 0, 0), Vector3(-1.01334, 0, 0), Vector3(-1.01334, 0, 0), Vector3(-1.01334, 0, 0), Vector3(-1.01334, 0, 0), Vector3(-1.01334, 0, 0), Vector3(-1.01334, 0, 0), Vector3(-1.01334, 0, 0), Vector3(-1.01334, 0, 0), Vector3(-1.01334, 0, 0), Vector3(-1.01334, 0, 0), Vector3(-1.01334, 0, 0), Vector3(-1.01334, 0, 0), Vector3(-1.01334, 0, 0), Vector3(-1.01334, 0, 0), Vector3(-1.01334, 0, 0), Vector3(-1.01334, 0, 0), Vector3(-1.01334, 0, 0), Vector3(-1.01334, 0, 0), Vector3(-1.01334, 0, 0), Vector3(-1.01334, 0, 0), Vector3(-1.01334, 0, 0), Vector3(-1.01334, 0, 0), Vector3(-1.01334, 0, 0), Vector3(-1.01334, 0, 0), Vector3(-1.01334, 0, 0), Vector3(-1.01334, 0, 0), Vector3(-1.01334, 0, 0), Vector3(-1.01334, 0, 0), Vector3(-1.01334, 0, 0), Vector3(-1.01334, 0, 0), Vector3(-1.01334, 0, 0), Vector3(-1.01334, 0, 0), Vector3(-1.01334, 0, 0), Vector3(-1.01334, 0, 0), Vector3(-1.01334, 0, 0), Vector3(-1.01334, 0, 0), Vector3(-1.01334, 0, 0), Vector3(-1.01334, 0, 0), Vector3(-1.01334, 0, 0), Vector3(-1.01334, 0, 0), Vector3(-1.01334, 0, 0), Vector3(-1.01334, 0, 0), Vector3(-1.01334, 0, 0), Vector3(-1.01334, 0, 0), Vector3(-1.01334, 0, 0), Vector3(-1.01334, 0, 0), Vector3(-1.01334, 0, 0), Vector3(-1.01334, 0, 0), Vector3(-1.01334, 0, 0), Vector3(-1.01334, 0, 0), Vector3(-1.01334, 0, 0), Vector3(-1.01334, 0, 0), Vector3(-1.01334, 0, 0), Vector3(-1.01334, 0, 0), Vector3(-1.01334, 0, 0), Vector3(-1.01334, 0, 0), Vector3(-1.01334, 0, 0), Vector3(-1.01334, 0, 0), Vector3(-1.01334, 0, 0), Vector3(-1.01334, 0, 0), Vector3(-1.01334, 0, 0), Vector3(-1.01334, 0, 0), Vector3(-1.01334, 0, 0), Vector3(-1.01334, 0, 0), Vector3(-1.01334, 0, 0), Vector3(-1.01334, 0, 0), Vector3(-1.01334, 0, 0), Vector3(-1.01334, 0, 0), Vector3(-1.01334, 0, 0), Vector3(-1.01334, 0, 0), Vector3(-1.01334, 0, 0), Vector3(-1.01334, 0, 0), Vector3(-1.01334, 0, 0), Vector3(-1.01334, 0, 0), Vector3(-1.01334, 0, 0), Vector3(-1.01334, 0, 0), Vector3(-1.01334, 0, 0), Vector3(-1.01334, 0, 0), Vector3(-1.01334, 0, 0), Vector3(-1.01334, 0, 0), Vector3(-1.01334, 0, 0), Vector3(-1.01334, 0, 0), Vector3(-1.01334, 0, 0), Vector3(-1.01334, 0, 0), Vector3(-1.01334, 0, 0), Vector3(-1.01334, 0, 0), Vector3(-1.01334, 0, 0), Vector3(-1.01334, 0, 0), Vector3(-1.01334, 0, 0), Vector3(-1.01334, 0, 0), Vector3(-1.01334, 0, 0), Vector3(-1.01334, 0, 0), Vector3(-1.01334, 0, 0), Vector3(-1.01334, 0, 0), Vector3(-1.01334, 0, 0), Vector3(-1.01334, 0, 0), Vector3(-1.01334, 0, 0), Vector3(-1.01334, 0, 0), Vector3(-1.01334, 0, 0), Vector3(-1.01334, 0, 0), Vector3(-1.01334, 0, 0), Vector3(-1.01334, 0, 0), Vector3(-1.01334, 0, 0), Vector3(-1.01334, 0, 0), Vector3(-1.01334, 0, 0), Vector3(-1.01334, 0, 0), Vector3(-1.01334, 0, 0), Vector3(-1.01334, 0, 0), Vector3(-1.01334, 0, 0), Vector3(-1.01334, 0, 0), Vector3(-1.01334, 0, 0), Vector3(-1.01334, 0, 0), Vector3(-1.01334, 0, 0), Vector3(-1.01334, 0, 0), Vector3(-1.01334, 0, 0), Vector3(-1.01334, 0, 0), Vector3(-1.01334, 0, 0), Vector3(-1.01334, 0, 0), Vector3(-1.01334, 0, 0), Vector3(-1.01334, 0, 0), Vector3(-1.01334, 0, 0), Vector3(-1.01334, 0, 0), Vector3(-1.01334, 0, 0), Vector3(-1.01334, 0, 0), Vector3(-1.01334, 0, 0), Vector3(-1.01334, 0, 0), Vector3(-1.01334, 0, 0), Vector3(-1.01334, 0, 0), Vector3(-1.01334, 0, 0), Vector3(-1.01334, 0, 0), Vector3(-1.01334, 0, 0), Vector3(-1.01334, 0, 0), Vector3(-1.01334, 0, 0), Vector3(-1.01334, 0, 0), Vector3(-1.01334, 0, 0), Vector3(-1.01334, 0, 0), Vector3(-1.01334, 0, 0), Vector3(-1.01334, 0, 0), Vector3(-1.01334, 0, 0), Vector3(-1.01334, 0, 0), Vector3(-1.01334, 0, 0), Vector3(-1.01334, 0, 0), Vector3(-1.01334, 0, 0), Vector3(-1.01334, 0, 0), Vector3(-1.01334, 0, 0), Vector3(-1.01334, 0, 0), Vector3(-1.01334, 0, 0), Vector3(-1.01334, 0, 0), Vector3(-1.01334, 0, 0), Vector3(-1.01334, 0, 0), Vector3(-1.01334, 0, 0), Vector3(-1.01334, 0, 0), Vector3(-1.01334, 0, 0), Vector3(-1.01334, 0, 0), Vector3(-1.01334, 0, 0), Vector3(-1.01334, 0, 0), Vector3(-1.01334, 0, 0), Vector3(-1.01334, 0, 0), Vector3(-1.01334, 0, 0), Vector3(-1.01334, 0, 0), Vector3(-1.01334, 0, 0), Vector3(-1.01334, 0, 0), Vector3(-1.01334, 0, 0), Vector3(-1.01334, 0, 0), Vector3(-1.01334, 0, 0), Vector3(-1.01334, 0, 0), Vector3(-1.01334, 0, 0), Vector3(-1.01334, 0, 0), Vector3(-1.01334, 0, 0)]
}
tracks/3/type = "value"
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/path = NodePath("right_arm:position")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/keys = {
"times": PackedFloat32Array(0, 0.00833333, 0.0166667, 0.025, 0.0333333, 0.0416667, 0.05, 0.0583333, 0.0666667, 0.075, 0.0833333, 0.0916667, 0.1, 0.108333, 0.116667, 0.125, 0.133333, 0.141667, 0.15, 0.158333, 0.166667, 0.175, 0.183333, 0.191667, 0.2, 0.208333, 0.216667, 0.225, 0.233333, 0.241667, 0.25, 0.258333, 0.266667, 0.275, 0.283333, 0.291667, 0.3, 0.308333, 0.316667, 0.325, 0.333333, 0.341667, 0.35, 0.358333, 0.366667, 0.375, 0.383333, 0.391667, 0.4, 0.408333, 0.416667, 0.425, 0.433333, 0.441667, 0.45, 0.458333, 0.466667, 0.475, 0.483333, 0.491667, 0.5, 0.508333, 0.516667, 0.525, 0.533333, 0.541667, 0.55, 0.558333, 0.566667, 0.575, 0.583333, 0.591667, 0.6, 0.608333, 0.616667, 0.625, 0.633333, 0.641667, 0.65, 0.658333, 0.666667, 0.675, 0.683333, 0.691667, 0.7, 0.708333, 0.716667, 0.725, 0.733333, 0.741667, 0.75, 0.758333, 0.766667, 0.775, 0.783333, 0.791667, 0.8, 0.808333, 0.816667, 0.825, 0.833333, 0.841667, 0.85, 0.858333, 0.866667, 0.875, 0.883333, 0.891667, 0.9, 0.908333, 0.916667, 0.925, 0.933333, 0.941667, 0.95, 0.958333, 0.966667, 0.975, 0.983333, 0.991667, 1, 1.00833, 1.01667, 1.025, 1.03333, 1.04167, 1.05, 1.05833, 1.06667, 1.075, 1.08333, 1.09167, 1.1, 1.10833, 1.11667, 1.125, 1.13333, 1.14167, 1.15, 1.15833, 1.16667, 1.175, 1.18333, 1.19167, 1.2, 1.20833, 1.21667, 1.225, 1.23333, 1.24167, 1.25, 1.25833, 1.26667, 1.275, 1.28333, 1.29167, 1.3, 1.30833, 1.31667, 1.325, 1.33333, 1.34167, 1.35, 1.35833, 1.36667, 1.375, 1.38333, 1.39167, 1.4, 1.40833, 1.41667, 1.425, 1.43333, 1.44167, 1.45, 1.45833, 1.46667, 1.475, 1.48333, 1.49167, 1.5, 1.50833, 1.51667, 1.525, 1.53333, 1.54167, 1.55, 1.55833, 1.56667, 1.575, 1.58333, 1.59167, 1.6, 1.60833, 1.61667, 1.625, 1.63333, 1.64167, 1.65, 1.65833, 1.66667, 1.675, 1.68333, 1.69167, 1.7, 1.70833, 1.71667, 1.725, 1.73333, 1.74167, 1.75, 1.75833, 1.76667, 1.775, 1.78333, 1.79167, 1.8, 1.80833, 1.81667, 1.825, 1.83333, 1.84167, 1.85, 1.85833, 1.86667, 1.875, 1.88333, 1.89167, 1.9, 1.90833, 1.91667, 1.925, 1.93333, 1.94167, 1.95, 1.95833, 1.96667, 1.975, 1.98333, 1.99167, 2),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 0,
"values": [Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913)]
}

[sub_resource type="Animation" id="Animation_co871"]
resource_name = "weak_combo_1"
length = 0.8
step = 0.01
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("left_arm:rotation")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0, 0.00833333, 0.0166667, 0.025, 0.0333333, 0.0416667, 0.05, 0.0583333, 0.0666667, 0.075, 0.0833333, 0.0916667, 0.1, 0.108333, 0.116667, 0.125, 0.133333, 0.141667, 0.15, 0.158333, 0.166667, 0.175, 0.183333, 0.191667, 0.2, 0.208333, 0.216667, 0.225, 0.233333, 0.241667, 0.25, 0.258333, 0.266667, 0.275, 0.283333, 0.291667, 0.3, 0.308333, 0.316667, 0.325, 0.333333, 0.341667, 0.35, 0.358333, 0.366667, 0.375, 0.383333, 0.391667, 0.4, 0.408333, 0.416667, 0.425, 0.433333, 0.441667, 0.45, 0.458333, 0.466667, 0.475, 0.483333, 0.491667, 0.5, 0.508333, 0.516667, 0.525, 0.533333, 0.541667, 0.55, 0.558333, 0.566667, 0.575, 0.583333, 0.591667, 0.6, 0.608333, 0.616667, 0.625, 0.633333, 0.641667, 0.65, 0.658333, 0.666667, 0.675, 0.683333, 0.691667, 0.7, 0.708333, 0.716667, 0.725, 0.733333, 0.741667, 0.75, 0.758333, 0.766667, 0.775, 0.783333, 0.791667, 0.8),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 0,
"values": [Vector3(0, 0.572538, -1.13118), Vector3(0.00366058, 0.56335, -1.14478), Vector3(0.00732117, 0.554162, -1.15838), Vector3(0.0109817, 0.544974, -1.17198), Vector3(0.0146423, 0.535786, -1.18558), Vector3(0.0183029, 0.526598, -1.19918), Vector3(0.0219635, 0.51741, -1.21278), Vector3(0.0256241, 0.508222, -1.22638), Vector3(0.0292847, 0.499034, -1.23998), Vector3(0.0329452, 0.489846, -1.25358), Vector3(0.0366058, 0.480657, -1.26718), Vector3(0.0402664, 0.471469, -1.28078), Vector3(0.043927, 0.462281, -1.29438), Vector3(0.0475876, 0.453093, -1.30798), Vector3(0.0512482, 0.443905, -1.32158), Vector3(0.0549087, 0.434717, -1.33518), Vector3(0.0585693, 0.425529, -1.34878), Vector3(0.0622299, 0.416341, -1.36238), Vector3(0.0658905, 0.407153, -1.37598), Vector3(0.0695511, 0.397965, -1.38957), Vector3(0.0732117, 0.388777, -1.40317), Vector3(0.0768722, 0.379589, -1.41677), Vector3(0.0805328, 0.370401, -1.43037), Vector3(0.0841934, 0.361213, -1.44397), Vector3(0.087854, 0.352025, -1.45757), Vector3(0.0915146, 0.342837, -1.47117), Vector3(0.0951752, 0.333649, -1.48477), Vector3(0.0988357, 0.324461, -1.49837), Vector3(0.102496, 0.315272, -1.51197), Vector3(0.106157, 0.306084, -1.52557), Vector3(0.109817, 0.296896, -1.53917), Vector3(0.113478, 0.287708, -1.55277), Vector3(0.117139, 0.27852, -1.56637), Vector3(0.120799, 0.269332, -1.57997), Vector3(0.12446, 0.260144, -1.59357), Vector3(0.12812, 0.250956, -1.60717), Vector3(0.131781, 0.241768, -1.62077), Vector3(0.120799, 0.244515, -1.57997), Vector3(0.109818, 0.247262, -1.53917), Vector3(0.0988358, 0.250009, -1.49837), Vector3(0.087854, 0.252756, -1.45757), Vector3(0.0768723, 0.255503, -1.41677), Vector3(0.0658905, 0.25825, -1.37598), Vector3(0.0549088, 0.260997, -1.33518), Vector3(0.043927, 0.263744, -1.29438), Vector3(0.0329453, 0.266491, -1.25358), Vector3(0.0219635, 0.269238, -1.21278), Vector3(0.0109818, 0.271985, -1.17198), Vector3(8.00647e-10, 0.274732, -1.13118), Vector3(7.78407e-10, 0.283004, -1.13118), Vector3(7.56167e-10, 0.291277, -1.13118), Vector3(7.33926e-10, 0.299549, -1.13118), Vector3(7.11686e-10, 0.307822, -1.13118), Vector3(6.89446e-10, 0.316094, -1.13118), Vector3(6.67206e-10, 0.324366, -1.13118), Vector3(6.44966e-10, 0.332639, -1.13118), Vector3(6.22725e-10, 0.340911, -1.13118), Vector3(6.00485e-10, 0.349183, -1.13118), Vector3(5.78245e-10, 0.357456, -1.13118), Vector3(5.56005e-10, 0.365728, -1.13118), Vector3(5.33765e-10, 0.374001, -1.13118), Vector3(5.11524e-10, 0.382273, -1.13118), Vector3(4.89284e-10, 0.390545, -1.13118), Vector3(4.67044e-10, 0.398818, -1.13118), Vector3(4.44804e-10, 0.40709, -1.13118), Vector3(4.22564e-10, 0.415363, -1.13118), Vector3(4.00323e-10, 0.423635, -1.13118), Vector3(3.78083e-10, 0.431907, -1.13118), Vector3(3.55843e-10, 0.44018, -1.13118), Vector3(3.33603e-10, 0.448452, -1.13118), Vector3(3.11363e-10, 0.456725, -1.13118), Vector3(2.89123e-10, 0.464997, -1.13118), Vector3(2.66882e-10, 0.473269, -1.13118), Vector3(2.44642e-10, 0.481542, -1.13118), Vector3(2.22402e-10, 0.489814, -1.13118), Vector3(2.00162e-10, 0.498087, -1.13118), Vector3(1.77922e-10, 0.506359, -1.13118), Vector3(1.55681e-10, 0.514631, -1.13118), Vector3(1.33441e-10, 0.522904, -1.13118), Vector3(1.11201e-10, 0.531176, -1.13118), Vector3(8.89608e-11, 0.539448, -1.13118), Vector3(6.67205e-11, 0.547721, -1.13118), Vector3(4.44804e-11, 0.555993, -1.13118), Vector3(2.22402e-11, 0.564266, -1.13118), Vector3(0, 0.572538, -1.13118), Vector3(0, 0.572538, -1.13118), Vector3(0, 0.572538, -1.13118), Vector3(0, 0.572538, -1.13118), Vector3(0, 0.572538, -1.13118), Vector3(0, 0.572538, -1.13118), Vector3(0, 0.572538, -1.13118), Vector3(0, 0.572538, -1.13118), Vector3(0, 0.572538, -1.13118), Vector3(0, 0.572538, -1.13118), Vector3(0, 0.572538, -1.13118), Vector3(0, 0.572538, -1.13118), Vector3(0, 0.572538, -1.13118)]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath("right_arm:position")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0, 0.00833333, 0.0166667, 0.025, 0.0333333, 0.0416667, 0.05, 0.0583333, 0.0666667, 0.075, 0.0833333, 0.0916667, 0.1, 0.108333, 0.116667, 0.125, 0.133333, 0.141667, 0.15, 0.158333, 0.166667, 0.175, 0.183333, 0.191667, 0.2, 0.208333, 0.216667, 0.225, 0.233333, 0.241667, 0.25, 0.258333, 0.266667, 0.275, 0.283333, 0.291667, 0.3, 0.308333, 0.316667, 0.325, 0.333333, 0.341667, 0.35, 0.358333, 0.366667, 0.375, 0.383333, 0.391667, 0.4, 0.408333, 0.416667, 0.425, 0.433333, 0.441667, 0.45, 0.458333, 0.466667, 0.475, 0.483333, 0.491667, 0.5, 0.508333, 0.516667, 0.525, 0.533333, 0.541667, 0.55, 0.558333, 0.566667, 0.575, 0.583333, 0.591667, 0.6, 0.608333, 0.616667, 0.625, 0.633333, 0.641667, 0.65, 0.658333, 0.666667, 0.675, 0.683333, 0.691667, 0.7, 0.708333, 0.716667, 0.725, 0.733333, 0.741667, 0.75, 0.758333, 0.766667, 0.775, 0.783333, 0.791667, 0.8),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 0,
"values": [Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.186223, 0.0279015), Vector3(1.05112, -0.169809, 0.0448118), Vector3(1.05112, -0.153394, 0.061722), Vector3(1.05112, -0.136979, 0.0786323), Vector3(1.05112, -0.120565, 0.0955425), Vector3(1.05112, -0.10415, 0.112453), Vector3(1.05112, -0.0877353, 0.129363), Vector3(1.05112, -0.0713207, 0.146273), Vector3(1.05112, -0.054906, 0.163183), Vector3(1.05112, -0.0384914, 0.180094), Vector3(1.05112, -0.0220767, 0.197004), Vector3(1.05112, -0.00566202, 0.213914), Vector3(1.05112, 0.0107526, 0.230824), Vector3(1.05112, 0.0271673, 0.247735), Vector3(1.05112, 0.043582, 0.264645), Vector3(1.05112, 0.0599967, 0.281555), Vector3(1.05112, 0.0764113, 0.298465), Vector3(1.05112, 0.092826, 0.315376), Vector3(1.05112, 0.109241, 0.332286), Vector3(1.05112, 0.125655, 0.349196), Vector3(1.05112, 0.14207, 0.366106), Vector3(1.05112, 0.158485, 0.383017), Vector3(1.05112, 0.174899, 0.399927), Vector3(1.05112, 0.191314, 0.416837), Vector3(1.05112, 0.207729, 0.433747), Vector3(1.05112, 0.224143, 0.450658), Vector3(1.05112, 0.240558, 0.467568), Vector3(1.05112, 0.256973, 0.484478), Vector3(1.05112, 0.273387, 0.501388), Vector3(1.05112, 0.289802, 0.518299), Vector3(1.05112, 0.306217, 0.535209), Vector3(1.05112, 0.322631, 0.552119), Vector3(1.05112, 0.339046, 0.569029), Vector3(1.05112, 0.355461, 0.585939), Vector3(1.05112, 0.371875, 0.60285), Vector3(1.05112, 0.38829, 0.61976), Vector3(1.01769, 0.38829, 0.529124), Vector3(0.984266, 0.38829, 0.438488), Vector3(0.950839, 0.38829, 0.347852), Vector3(0.917412, 0.38829, 0.257215), Vector3(0.883985, 0.38829, 0.166579), Vector3(0.850558, 0.38829, 0.0759431), Vector3(0.81713, 0.38829, -0.0146931), Vector3(0.783703, 0.38829, -0.105329), Vector3(0.750276, 0.38829, -0.195965), Vector3(0.716849, 0.38829, -0.286602), Vector3(0.683422, 0.38829, -0.377238), Vector3(0.649995, 0.38829, -0.467874), Vector3(0.661137, 0.371875, -0.454572), Vector3(0.67228, 0.355461, -0.44127), Vector3(0.683422, 0.339046, -0.427969), Vector3(0.694564, 0.322631, -0.414667), Vector3(0.705707, 0.306217, -0.401365), Vector3(0.716849, 0.289802, -0.388063), Vector3(0.727992, 0.273387, -0.374761), Vector3(0.739134, 0.256973, -0.361459), Vector3(0.750276, 0.240558, -0.348158), Vector3(0.761419, 0.224143, -0.334856), Vector3(0.772561, 0.207729, -0.321554), Vector3(0.783703, 0.191314, -0.308252), Vector3(0.794846, 0.174899, -0.29495), Vector3(0.805988, 0.158485, -0.281649), Vector3(0.81713, 0.14207, -0.268347), Vector3(0.828273, 0.125655, -0.255045), Vector3(0.839415, 0.109241, -0.241743), Vector3(0.850558, 0.092826, -0.228441), Vector3(0.8617, 0.0764113, -0.21514), Vector3(0.872842, 0.0599967, -0.201838), Vector3(0.883985, 0.043582, -0.188536), Vector3(0.895127, 0.0271674, -0.175234), Vector3(0.906269, 0.0107527, -0.161932), Vector3(0.917412, -0.00566199, -0.14863), Vector3(0.928554, -0.0220767, -0.135329), Vector3(0.939696, -0.0384913, -0.122027), Vector3(0.950839, -0.054906, -0.108725), Vector3(0.961981, -0.0713207, -0.0954232), Vector3(0.973124, -0.0877353, -0.0821214), Vector3(0.984266, -0.10415, -0.0688196), Vector3(0.995408, -0.120565, -0.0555177), Vector3(1.00655, -0.136979, -0.0422159), Vector3(1.01769, -0.153394, -0.0289141), Vector3(1.02884, -0.169809, -0.0156123), Vector3(1.03998, -0.186223, -0.00231048), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913)]
}
tracks/2/type = "value"
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/path = NodePath("right_arm:rotation")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/keys = {
"times": PackedFloat32Array(0, 0.00833333, 0.0166667, 0.025, 0.0333333, 0.0416667, 0.05, 0.0583333, 0.0666667, 0.075, 0.0833333, 0.0916667, 0.1, 0.108333, 0.116667, 0.125, 0.133333, 0.141667, 0.15, 0.158333, 0.166667, 0.175, 0.183333, 0.191667, 0.2, 0.208333, 0.216667, 0.225, 0.233333, 0.241667, 0.25, 0.258333, 0.266667, 0.275, 0.283333, 0.291667, 0.3, 0.308333, 0.316667, 0.325, 0.333333, 0.341667, 0.35, 0.358333, 0.366667, 0.375, 0.383333, 0.391667, 0.4, 0.408333, 0.416667, 0.425, 0.433333, 0.441667, 0.45, 0.458333, 0.466667, 0.475, 0.483333, 0.491667, 0.5, 0.508333, 0.516667, 0.525, 0.533333, 0.541667, 0.55, 0.558333, 0.566667, 0.575, 0.583333, 0.591667, 0.6, 0.608333, 0.616667, 0.625, 0.633333, 0.641667, 0.65, 0.658333, 0.666667, 0.675, 0.683333, 0.691667, 0.7, 0.708333, 0.716667, 0.725, 0.733333, 0.741667, 0.75, 0.758333, 0.766667, 0.775, 0.783333, 0.791667, 0.8),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 0,
"values": [Vector3(0, -0.63324, 0.924414), Vector3(-4.29286e-10, -0.668064, 0.924414), Vector3(-8.58572e-10, -0.702887, 0.924414), Vector3(-1.28786e-09, -0.737711, 0.924414), Vector3(-1.71714e-09, -0.772534, 0.924414), Vector3(-2.14643e-09, -0.807358, 0.924414), Vector3(-2.57572e-09, -0.842182, 0.924414), Vector3(-3.005e-09, -0.877005, 0.924414), Vector3(-3.43429e-09, -0.911829, 0.924414), Vector3(-3.86357e-09, -0.946653, 0.924414), Vector3(-4.29286e-09, -0.981476, 0.924414), Vector3(-4.72215e-09, -1.0163, 0.924414), Vector3(-5.15143e-09, -1.05112, 0.924414), Vector3(-5.58072e-09, -1.08595, 0.924414), Vector3(-6.01e-09, -1.12077, 0.924414), Vector3(-6.43929e-09, -1.15559, 0.924414), Vector3(-6.86858e-09, -1.19042, 0.924414), Vector3(-7.29786e-09, -1.22524, 0.924414), Vector3(-7.72715e-09, -1.26007, 0.924414), Vector3(-8.15643e-09, -1.29489, 0.924414), Vector3(-8.58572e-09, -1.32971, 0.924414), Vector3(-9.01501e-09, -1.36454, 0.924414), Vector3(-9.44429e-09, -1.39936, 0.924414), Vector3(-9.87358e-09, -1.43418, 0.924414), Vector3(-1.03029e-08, -1.46901, 0.924414), Vector3(-1.07322e-08, -1.50383, 0.924414), Vector3(-1.11614e-08, -1.53865, 0.924414), Vector3(-1.15907e-08, -1.57348, 0.924414), Vector3(-1.202e-08, -1.6083, 0.924414), Vector3(-1.24493e-08, -1.64312, 0.924414), Vector3(-1.28786e-08, -1.67795, 0.924414), Vector3(-1.33079e-08, -1.71277, 0.924414), Vector3(-1.37372e-08, -1.7476, 0.924414), Vector3(-1.41664e-08, -1.78242, 0.924414), Vector3(-1.45957e-08, -1.81724, 0.924414), Vector3(-1.5025e-08, -1.85207, 0.924414), Vector3(-5.78724e-08, -1.88689, 0.924414), Vector3(0.0296524, -1.80882, 0.984716), Vector3(0.0593048, -1.73075, 1.04502), Vector3(0.0889572, -1.65267, 1.10532), Vector3(0.11861, -1.5746, 1.16562), Vector3(0.148262, -1.49653, 1.22592), Vector3(0.177914, -1.41846, 1.28623), Vector3(0.207567, -1.34038, 1.34653), Vector3(0.237219, -1.26231, 1.40683), Vector3(0.266872, -1.18424, 1.46713), Vector3(0.296524, -1.10617, 1.52744), Vector3(0.326177, -1.0281, 1.58774), Vector3(0.355829, -0.950024, 1.64804), Vector3(0.345945, -0.941224, 1.62794), Vector3(0.336061, -0.932425, 1.60784), Vector3(0.326177, -0.923625, 1.58774), Vector3(0.316292, -0.914826, 1.56764), Vector3(0.306408, -0.906026, 1.54754), Vector3(0.296524, -0.897227, 1.52744), Vector3(0.28664, -0.888427, 1.50733), Vector3(0.276756, -0.879628, 1.48723), Vector3(0.266872, -0.870828, 1.46713), Vector3(0.256988, -0.862028, 1.44703), Vector3(0.247103, -0.853229, 1.42693), Vector3(0.237219, -0.844429, 1.40683), Vector3(0.227335, -0.83563, 1.38673), Vector3(0.217451, -0.82683, 1.36663), Vector3(0.207567, -0.818031, 1.34653), Vector3(0.197683, -0.809231, 1.32643), Vector3(0.187799, -0.800432, 1.30633), Vector3(0.177915, -0.791632, 1.28623), Vector3(0.16803, -0.782832, 1.26613), Vector3(0.158146, -0.774033, 1.24603), Vector3(0.148262, -0.765233, 1.22592), Vector3(0.138378, -0.756434, 1.20582), Vector3(0.128494, -0.747634, 1.18572), Vector3(0.11861, -0.738835, 1.16562), Vector3(0.108726, -0.730035, 1.14552), Vector3(0.0988414, -0.721236, 1.12542), Vector3(0.0889573, -0.712436, 1.10532), Vector3(0.0790731, -0.703636, 1.08522), Vector3(0.069189, -0.694837, 1.06512), Vector3(0.0593048, -0.686037, 1.04502), Vector3(0.0494207, -0.677238, 1.02492), Vector3(0.0395366, -0.668438, 1.00482), Vector3(0.0296524, -0.659639, 0.984716), Vector3(0.0197683, -0.650839, 0.964615), Vector3(0.00988412, -0.64204, 0.944515), Vector3(0, -0.63324, 0.924414), Vector3(0, -0.63324, 0.924414), Vector3(0, -0.63324, 0.924414), Vector3(0, -0.63324, 0.924414), Vector3(0, -0.63324, 0.924414), Vector3(0, -0.63324, 0.924414), Vector3(0, -0.63324, 0.924414), Vector3(0, -0.63324, 0.924414), Vector3(0, -0.63324, 0.924414), Vector3(0, -0.63324, 0.924414), Vector3(0, -0.63324, 0.924414), Vector3(0, -0.63324, 0.924414), Vector3(0, -0.63324, 0.924414)]
}
tracks/3/type = "value"
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/path = NodePath(".:block_inputs")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/keys = {
"times": PackedFloat32Array(0, 0.00833333, 0.0166667, 0.025, 0.0333333, 0.0416667, 0.05, 0.0583333, 0.0666667, 0.075, 0.0833333, 0.0916667, 0.1, 0.108333, 0.116667, 0.125, 0.133333, 0.141667, 0.15, 0.158333, 0.166667, 0.175, 0.183333, 0.191667, 0.2, 0.208333, 0.216667, 0.225, 0.233333, 0.241667, 0.25, 0.258333, 0.266667, 0.275, 0.283333, 0.291667, 0.3, 0.308333, 0.316667, 0.325, 0.333333, 0.341667, 0.35, 0.358333, 0.366667, 0.375, 0.383333, 0.391667, 0.4, 0.408333, 0.416667, 0.425, 0.433333, 0.441667, 0.45, 0.458333, 0.466667, 0.475, 0.483333, 0.491667, 0.5, 0.508333, 0.516667, 0.525, 0.533333, 0.541667, 0.55, 0.558333, 0.566667, 0.575, 0.583333, 0.591667, 0.6, 0.608333, 0.616667, 0.625, 0.633333, 0.641667, 0.65, 0.658333, 0.666667, 0.675, 0.683333, 0.691667, 0.7, 0.708333, 0.716667, 0.725, 0.733333, 0.741667, 0.75, 0.758333, 0.766667, 0.775, 0.783333, 0.791667, 0.8),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 1,
"values": [true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false]
}
tracks/4/type = "value"
tracks/4/imported = false
tracks/4/enabled = true
tracks/4/path = NodePath("right_arm/right_meleebox:enabled")
tracks/4/interp = 1
tracks/4/loop_wrap = true
tracks/4/keys = {
"times": PackedFloat32Array(0, 0.00833333, 0.0166667, 0.025, 0.0333333, 0.0416667, 0.05, 0.0583333, 0.0666667, 0.075, 0.0833333, 0.0916667, 0.1, 0.108333, 0.116667, 0.125, 0.133333, 0.141667, 0.15, 0.158333, 0.166667, 0.175, 0.183333, 0.191667, 0.2, 0.208333, 0.216667, 0.225, 0.233333, 0.241667, 0.25, 0.258333, 0.266667, 0.275, 0.283333, 0.291667, 0.3, 0.308333, 0.316667, 0.325, 0.333333, 0.341667, 0.35, 0.358333, 0.366667, 0.375, 0.383333, 0.391667, 0.4, 0.408333, 0.416667, 0.425, 0.433333, 0.441667, 0.45, 0.458333, 0.466667, 0.475, 0.483333, 0.491667, 0.5, 0.508333, 0.516667, 0.525, 0.533333, 0.541667, 0.55, 0.558333, 0.566667, 0.575, 0.583333, 0.591667, 0.6, 0.608333, 0.616667, 0.625, 0.633333, 0.641667, 0.65, 0.658333, 0.666667, 0.675, 0.683333, 0.691667, 0.7, 0.708333, 0.716667, 0.725, 0.733333, 0.741667, 0.75, 0.758333, 0.766667, 0.775, 0.783333, 0.791667, 0.8),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 1,
"values": [true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false]
}

[sub_resource type="Animation" id="Animation_vk3ux"]
resource_name = "weak_combo_2"
length = 0.6
step = 0.01
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("left_arm:position")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0, 0.00833333, 0.0166667, 0.025, 0.0333333, 0.0416667, 0.05, 0.0583333, 0.0666667, 0.075, 0.0833333, 0.0916667, 0.1, 0.108333, 0.116667, 0.125, 0.133333, 0.141667, 0.15, 0.158333, 0.166667, 0.175, 0.183333, 0.191667, 0.2, 0.208333, 0.216667, 0.225, 0.233333, 0.241667, 0.25, 0.258333, 0.266667, 0.275, 0.283333, 0.291667, 0.3, 0.308333, 0.316667, 0.325, 0.333333, 0.341667, 0.35, 0.358333, 0.366667, 0.375, 0.383333, 0.391667, 0.4, 0.408333, 0.416667, 0.425, 0.433333, 0.441667, 0.45, 0.458333, 0.466667, 0.475, 0.483333, 0.491667, 0.5, 0.508333, 0.516667, 0.525, 0.533333, 0.541667, 0.55, 0.558333, 0.566667, 0.575, 0.583333, 0.591667, 0.6),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 0,
"values": [Vector3(-1.03239, -0.0902953, 0), Vector3(-1.04986, -0.107473, 0), Vector3(-1.06733, -0.12465, 0), Vector3(-1.0848, -0.141828, 0), Vector3(-1.10228, -0.159006, 0), Vector3(-1.11975, -0.176183, 0), Vector3(-1.13722, -0.193361, 0), Vector3(-1.15469, -0.210538, 0), Vector3(-1.17216, -0.227716, 0), Vector3(-1.18963, -0.244893, 0), Vector3(-1.2071, -0.262071, 0), Vector3(-1.22457, -0.279249, 0), Vector3(-1.24204, -0.296426, 0), Vector3(-1.25952, -0.313604, 0), Vector3(-1.27699, -0.330781, 0), Vector3(-1.29446, -0.347959, 0), Vector3(-1.31193, -0.365136, 0), Vector3(-1.3294, -0.382314, 0), Vector3(-1.34687, -0.399492, 0), Vector3(-1.36434, -0.416669, 0), Vector3(-1.38181, -0.433847, 0), Vector3(-1.39929, -0.451024, 0), Vector3(-1.41676, -0.468202, 0), Vector3(-1.43423, -0.485379, 0), Vector3(-1.4517, -0.502557, 3.15469e-08), Vector3(-1.37162, -0.424073, -0.0882116), Vector3(-1.29154, -0.345589, -0.176423), Vector3(-1.21146, -0.267105, -0.264635), Vector3(-1.13138, -0.18862, -0.352847), Vector3(-1.0513, -0.110136, -0.441058), Vector3(-0.971223, -0.031652, -0.52927), Vector3(-0.891144, 0.0468321, -0.617482), Vector3(-0.811064, 0.125316, -0.705693), Vector3(-0.730985, 0.2038, -0.793905), Vector3(-0.650905, 0.282285, -0.882116), Vector3(-0.570826, 0.360769, -0.970328), Vector3(-0.490746, 0.439253, -1.05854), Vector3(-0.508166, 0.424611, -1.02326), Vector3(-0.525586, 0.409969, -0.987971), Vector3(-0.543005, 0.395328, -0.952686), Vector3(-0.560425, 0.380686, -0.917401), Vector3(-0.577845, 0.366044, -0.882117), Vector3(-0.595265, 0.351402, -0.846832), Vector3(-0.612685, 0.336761, -0.811547), Vector3(-0.630104, 0.322119, -0.776263), Vector3(-0.647524, 0.307477, -0.740978), Vector3(-0.664944, 0.292835, -0.705693), Vector3(-0.682364, 0.278194, -0.670409), Vector3(-0.699784, 0.263552, -0.635124), Vector3(-0.717203, 0.24891, -0.599839), Vector3(-0.734623, 0.234268, -0.564555), Vector3(-0.752043, 0.219627, -0.52927), Vector3(-0.769463, 0.204985, -0.493985), Vector3(-0.786883, 0.190343, -0.458701), Vector3(-0.804302, 0.175701, -0.423416), Vector3(-0.821722, 0.161059, -0.388131), Vector3(-0.839142, 0.146418, -0.352847), Vector3(-0.856562, 0.131776, -0.317562), Vector3(-0.873982, 0.117134, -0.282277), Vector3(-0.891401, 0.102492, -0.246993), Vector3(-0.908821, 0.0878506, -0.211708), Vector3(-0.926241, 0.0732088, -0.176423), Vector3(-0.943661, 0.0585671, -0.141139), Vector3(-0.961081, 0.0439253, -0.105854), Vector3(-0.9785, 0.0292836, -0.0705694), Vector3(-0.99592, 0.0146418, -0.0352846), Vector3(-1.01334, 0, 0), Vector3(-1.01334, 0, 0), Vector3(-1.01334, 0, 0), Vector3(-1.01334, 0, 0), Vector3(-1.01334, 0, 0), Vector3(-1.01334, 0, 0), Vector3(-1.01334, 0, 0)]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath("left_arm:rotation")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0, 0.00833333, 0.0166667, 0.025, 0.0333333, 0.0416667, 0.05, 0.0583333, 0.0666667, 0.075, 0.0833333, 0.0916667, 0.1, 0.108333, 0.116667, 0.125, 0.133333, 0.141667, 0.15, 0.158333, 0.166667, 0.175, 0.183333, 0.191667, 0.2, 0.208333, 0.216667, 0.225, 0.233333, 0.241667, 0.25, 0.258333, 0.266667, 0.275, 0.283333, 0.291667, 0.3, 0.308333, 0.316667, 0.325, 0.333333, 0.341667, 0.35, 0.358333, 0.366667, 0.375, 0.383333, 0.391667, 0.4, 0.408333, 0.416667, 0.425, 0.433333, 0.441667, 0.45, 0.458333, 0.466667, 0.475, 0.483333, 0.491667, 0.5, 0.508333, 0.516667, 0.525, 0.533333, 0.541667, 0.55, 0.558333, 0.566667, 0.575, 0.583333, 0.591667, 0.6),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 0,
"values": [Vector3(1.60129e-09, 0.426122, -1.13118), Vector3(6.52603e-10, 0.447222, -1.13118), Vector3(-2.96084e-10, 0.468321, -1.13118), Vector3(-1.24477e-09, 0.489421, -1.13118), Vector3(-2.19346e-09, 0.510521, -1.13118), Vector3(-3.14215e-09, 0.531621, -1.13118), Vector3(-4.09083e-09, 0.55272, -1.13118), Vector3(-5.03952e-09, 0.57382, -1.13118), Vector3(-5.98821e-09, 0.59492, -1.13118), Vector3(-6.93689e-09, 0.616019, -1.13118), Vector3(-7.88558e-09, 0.637119, -1.13118), Vector3(-8.83427e-09, 0.658219, -1.13118), Vector3(-9.78295e-09, 0.679319, -1.13118), Vector3(-1.07316e-08, 0.700418, -1.13118), Vector3(-1.16803e-08, 0.721518, -1.13118), Vector3(-1.2629e-08, 0.742618, -1.13118), Vector3(-1.35777e-08, 0.763717, -1.13118), Vector3(-1.45264e-08, 0.784817, -1.13118), Vector3(-1.54751e-08, 0.805917, -1.13118), Vector3(-1.64238e-08, 0.827016, -1.13118), Vector3(-1.73725e-08, 0.848116, -1.13118), Vector3(-1.83211e-08, 0.869216, -1.13118), Vector3(-1.92698e-08, 0.890316, -1.13118), Vector3(-2.02185e-08, 0.911415, -1.13118), Vector3(-3.63531e-08, 0.932515, -1.13118), Vector3(0.042463, 0.940257, -1.07475), Vector3(0.084926, 0.947999, -1.01832), Vector3(0.127389, 0.955741, -0.961897), Vector3(0.169852, 0.963483, -0.90547), Vector3(0.212315, 0.971225, -0.849042), Vector3(0.254778, 0.978967, -0.792615), Vector3(0.297241, 0.98671, -0.736187), Vector3(0.339704, 0.994452, -0.679759), Vector3(0.382167, 1.00219, -0.623332), Vector3(0.42463, 1.00994, -0.566904), Vector3(0.467093, 1.01768, -0.510477), Vector3(0.509556, 1.02542, -0.454049), Vector3(0.492571, 1.01032, -0.47662), Vector3(0.475586, 0.995228, -0.499191), Vector3(0.4586, 0.980132, -0.521762), Vector3(0.441615, 0.965036, -0.544333), Vector3(0.42463, 0.94994, -0.566904), Vector3(0.407645, 0.934844, -0.589475), Vector3(0.39066, 0.919748, -0.612046), Vector3(0.373674, 0.904651, -0.634617), Vector3(0.356689, 0.889555, -0.657188), Vector3(0.339704, 0.874459, -0.679759), Vector3(0.322719, 0.859363, -0.70233), Vector3(0.305734, 0.844267, -0.724901), Vector3(0.288748, 0.829171, -0.747472), Vector3(0.271763, 0.814075, -0.770043), Vector3(0.254778, 0.798979, -0.792614), Vector3(0.237793, 0.783883, -0.815186), Vector3(0.220808, 0.768787, -0.837757), Vector3(0.203822, 0.753691, -0.860328), Vector3(0.186837, 0.738595, -0.882899), Vector3(0.169852, 0.723499, -0.90547), Vector3(0.152867, 0.708403, -0.928041), Vector3(0.135882, 0.693307, -0.950612), Vector3(0.118896, 0.67821, -0.973183), Vector3(0.101911, 0.663114, -0.995754), Vector3(0.084926, 0.648018, -1.01832), Vector3(0.0679408, 0.632922, -1.0409), Vector3(0.0509556, 0.617826, -1.06347), Vector3(0.0339704, 0.60273, -1.08604), Vector3(0.0169852, 0.587634, -1.10861), Vector3(0, 0.572538, -1.13118), Vector3(0, 0.572538, -1.13118), Vector3(0, 0.572538, -1.13118), Vector3(0, 0.572538, -1.13118), Vector3(0, 0.572538, -1.13118), Vector3(0, 0.572538, -1.13118), Vector3(0, 0.572538, -1.13118)]
}
tracks/2/type = "value"
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/path = NodePath("right_arm:position")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/keys = {
"times": PackedFloat32Array(0, 0.00833333, 0.0166667, 0.025, 0.0333333, 0.0416667, 0.05, 0.0583333, 0.0666667, 0.075, 0.0833333, 0.0916667, 0.1, 0.108333, 0.116667, 0.125, 0.133333, 0.141667, 0.15, 0.158333, 0.166667, 0.175, 0.183333, 0.191667, 0.2, 0.208333, 0.216667, 0.225, 0.233333, 0.241667, 0.25, 0.258333, 0.266667, 0.275, 0.283333, 0.291667, 0.3, 0.308333, 0.316667, 0.325, 0.333333, 0.341667, 0.35, 0.358333, 0.366667, 0.375, 0.383333, 0.391667, 0.4, 0.408333, 0.416667, 0.425, 0.433333, 0.441667, 0.45, 0.458333, 0.466667, 0.475, 0.483333, 0.491667, 0.5, 0.508333, 0.516667, 0.525, 0.533333, 0.541667, 0.55, 0.558333, 0.566667, 0.575, 0.583333, 0.591667, 0.6),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 0,
"values": [Vector3(0.649995, 0.38829, -0.467874), Vector3(0.661137, 0.371875, -0.454572), Vector3(0.67228, 0.355461, -0.44127), Vector3(0.683422, 0.339046, -0.427969), Vector3(0.694564, 0.322631, -0.414667), Vector3(0.705707, 0.306217, -0.401365), Vector3(0.716849, 0.289802, -0.388063), Vector3(0.727992, 0.273387, -0.374761), Vector3(0.739134, 0.256973, -0.361459), Vector3(0.750276, 0.240558, -0.348158), Vector3(0.761419, 0.224143, -0.334856), Vector3(0.772561, 0.207729, -0.321554), Vector3(0.783703, 0.191314, -0.308252), Vector3(0.794846, 0.174899, -0.29495), Vector3(0.805988, 0.158485, -0.281649), Vector3(0.81713, 0.14207, -0.268347), Vector3(0.828273, 0.125655, -0.255045), Vector3(0.839415, 0.109241, -0.241743), Vector3(0.850558, 0.092826, -0.228441), Vector3(0.8617, 0.0764114, -0.21514), Vector3(0.872842, 0.0599967, -0.201838), Vector3(0.883985, 0.043582, -0.188536), Vector3(0.895127, 0.0271674, -0.175234), Vector3(0.906269, 0.0107527, -0.161932), Vector3(0.917412, -0.00566196, -0.14863), Vector3(0.928554, -0.0220766, -0.135329), Vector3(0.939696, -0.0384913, -0.122027), Vector3(0.950839, -0.054906, -0.108725), Vector3(0.961981, -0.0713206, -0.0954232), Vector3(0.973123, -0.0877353, -0.0821214), Vector3(0.984266, -0.10415, -0.0688196), Vector3(0.995408, -0.120565, -0.0555178), Vector3(1.00655, -0.136979, -0.0422159), Vector3(1.01769, -0.153394, -0.0289142), Vector3(1.02884, -0.169809, -0.0156123), Vector3(1.03998, -0.186223, -0.00231054), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.05112, -0.202638, 0.0109913)]
}
tracks/3/type = "value"
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/path = NodePath("right_arm:rotation")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/keys = {
"times": PackedFloat32Array(0, 0.00833333, 0.0166667, 0.025, 0.0333333, 0.0416667, 0.05, 0.0583333, 0.0666667, 0.075, 0.0833333, 0.0916667, 0.1, 0.108333, 0.116667, 0.125, 0.133333, 0.141667, 0.15, 0.158333, 0.166667, 0.175, 0.183333, 0.191667, 0.2, 0.208333, 0.216667, 0.225, 0.233333, 0.241667, 0.25, 0.258333, 0.266667, 0.275, 0.283333, 0.291667, 0.3, 0.308333, 0.316667, 0.325, 0.333333, 0.341667, 0.35, 0.358333, 0.366667, 0.375, 0.383333, 0.391667, 0.4, 0.408333, 0.416667, 0.425, 0.433333, 0.441667, 0.45, 0.458333, 0.466667, 0.475, 0.483333, 0.491667, 0.5, 0.508333, 0.516667, 0.525, 0.533333, 0.541667, 0.55, 0.558333, 0.566667, 0.575, 0.583333, 0.591667, 0.6),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 0,
"values": [Vector3(0.355829, -0.950024, 1.64804), Vector3(0.345945, -0.941224, 1.62794), Vector3(0.336061, -0.932425, 1.60784), Vector3(0.326177, -0.923625, 1.58774), Vector3(0.316292, -0.914826, 1.56764), Vector3(0.306408, -0.906026, 1.54754), Vector3(0.296524, -0.897227, 1.52744), Vector3(0.28664, -0.888427, 1.50733), Vector3(0.276756, -0.879628, 1.48723), Vector3(0.266872, -0.870828, 1.46713), Vector3(0.256988, -0.862028, 1.44703), Vector3(0.247103, -0.853229, 1.42693), Vector3(0.237219, -0.844429, 1.40683), Vector3(0.227335, -0.83563, 1.38673), Vector3(0.217451, -0.82683, 1.36663), Vector3(0.207567, -0.818031, 1.34653), Vector3(0.197683, -0.809231, 1.32643), Vector3(0.187799, -0.800432, 1.30633), Vector3(0.177915, -0.791632, 1.28623), Vector3(0.16803, -0.782832, 1.26613), Vector3(0.158146, -0.774033, 1.24603), Vector3(0.148262, -0.765233, 1.22592), Vector3(0.138378, -0.756434, 1.20582), Vector3(0.128494, -0.747634, 1.18572), Vector3(0.11861, -0.738835, 1.16562), Vector3(0.108726, -0.730035, 1.14552), Vector3(0.0988414, -0.721236, 1.12542), Vector3(0.0889573, -0.712436, 1.10532), Vector3(0.0790731, -0.703636, 1.08522), Vector3(0.069189, -0.694837, 1.06512), Vector3(0.0593048, -0.686037, 1.04502), Vector3(0.0494207, -0.677238, 1.02492), Vector3(0.0395366, -0.668438, 1.00482), Vector3(0.0296524, -0.659639, 0.984716), Vector3(0.0197683, -0.650839, 0.964615), Vector3(0.00988418, -0.64204, 0.944515), Vector3(0, -0.63324, 0.924414), Vector3(0, -0.63324, 0.924414), Vector3(0, -0.63324, 0.924414), Vector3(0, -0.63324, 0.924414), Vector3(0, -0.63324, 0.924414), Vector3(0, -0.63324, 0.924414), Vector3(0, -0.63324, 0.924414), Vector3(0, -0.63324, 0.924414), Vector3(0, -0.63324, 0.924414), Vector3(0, -0.63324, 0.924414), Vector3(0, -0.63324, 0.924414), Vector3(0, -0.63324, 0.924414), Vector3(0, -0.63324, 0.924414), Vector3(0, -0.63324, 0.924414), Vector3(0, -0.63324, 0.924414), Vector3(0, -0.63324, 0.924414), Vector3(0, -0.63324, 0.924414), Vector3(0, -0.63324, 0.924414), Vector3(0, -0.63324, 0.924414), Vector3(0, -0.63324, 0.924414), Vector3(0, -0.63324, 0.924414), Vector3(0, -0.63324, 0.924414), Vector3(0, -0.63324, 0.924414), Vector3(0, -0.63324, 0.924414), Vector3(0, -0.63324, 0.924414), Vector3(0, -0.63324, 0.924414), Vector3(0, -0.63324, 0.924414), Vector3(0, -0.63324, 0.924414), Vector3(0, -0.63324, 0.924414), Vector3(0, -0.63324, 0.924414), Vector3(0, -0.63324, 0.924414), Vector3(0, -0.63324, 0.924414), Vector3(0, -0.63324, 0.924414), Vector3(0, -0.63324, 0.924414), Vector3(0, -0.63324, 0.924414), Vector3(0, -0.63324, 0.924414), Vector3(0, -0.63324, 0.924414)]
}
tracks/4/type = "value"
tracks/4/imported = false
tracks/4/enabled = true
tracks/4/path = NodePath(".:block_inputs")
tracks/4/interp = 1
tracks/4/loop_wrap = true
tracks/4/keys = {
"times": PackedFloat32Array(0, 0.00833333, 0.0166667, 0.025, 0.0333333, 0.0416667, 0.05, 0.0583333, 0.0666667, 0.075, 0.0833333, 0.0916667, 0.1, 0.108333, 0.116667, 0.125, 0.133333, 0.141667, 0.15, 0.158333, 0.166667, 0.175, 0.183333, 0.191667, 0.2, 0.208333, 0.216667, 0.225, 0.233333, 0.241667, 0.25, 0.258333, 0.266667, 0.275, 0.283333, 0.291667, 0.3, 0.308333, 0.316667, 0.325, 0.333333, 0.341667, 0.35, 0.358333, 0.366667, 0.375, 0.383333, 0.391667, 0.4, 0.408333, 0.416667, 0.425, 0.433333, 0.441667, 0.45, 0.458333, 0.466667, 0.475, 0.483333, 0.491667, 0.5, 0.508333, 0.516667, 0.525, 0.533333, 0.541667, 0.55, 0.558333, 0.566667, 0.575, 0.583333, 0.591667, 0.6),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 1,
"values": [true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false]
}
tracks/5/type = "value"
tracks/5/imported = false
tracks/5/enabled = true
tracks/5/path = NodePath("left_arm/left_meleebox:enabled")
tracks/5/interp = 1
tracks/5/loop_wrap = true
tracks/5/keys = {
"times": PackedFloat32Array(0, 0.00833333, 0.0166667, 0.025, 0.0333333, 0.0416667, 0.05, 0.0583333, 0.0666667, 0.075, 0.0833333, 0.0916667, 0.1, 0.108333, 0.116667, 0.125, 0.133333, 0.141667, 0.15, 0.158333, 0.166667, 0.175, 0.183333, 0.191667, 0.2, 0.208333, 0.216667, 0.225, 0.233333, 0.241667, 0.25, 0.258333, 0.266667, 0.275, 0.283333, 0.291667, 0.3, 0.308333, 0.316667, 0.325, 0.333333, 0.341667, 0.35, 0.358333, 0.366667, 0.375, 0.383333, 0.391667, 0.4, 0.408333, 0.416667, 0.425, 0.433333, 0.441667, 0.45, 0.458333, 0.466667, 0.475, 0.483333, 0.491667, 0.5, 0.508333, 0.516667, 0.525, 0.533333, 0.541667, 0.55, 0.558333, 0.566667, 0.575, 0.583333, 0.591667, 0.6),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 1,
"values": [true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false]
}
tracks/6/type = "value"
tracks/6/imported = false
tracks/6/enabled = true
tracks/6/path = NodePath("right_arm/right_meleebox:enabled")
tracks/6/interp = 1
tracks/6/loop_wrap = true
tracks/6/keys = {
"times": PackedFloat32Array(0, 0.00833333, 0.0166667, 0.025, 0.0333333, 0.0416667, 0.05, 0.0583333, 0.0666667, 0.075, 0.0833333, 0.0916667, 0.1, 0.108333, 0.116667, 0.125, 0.133333, 0.141667, 0.15, 0.158333, 0.166667, 0.175, 0.183333, 0.191667, 0.2, 0.208333, 0.216667, 0.225, 0.233333, 0.241667, 0.25, 0.258333, 0.266667, 0.275, 0.283333, 0.291667, 0.3, 0.308333, 0.316667, 0.325, 0.333333, 0.341667, 0.35, 0.358333, 0.366667, 0.375, 0.383333, 0.391667, 0.4, 0.408333, 0.416667, 0.425, 0.433333, 0.441667, 0.45, 0.458333, 0.466667, 0.475, 0.483333, 0.491667, 0.5, 0.508333, 0.516667, 0.525, 0.533333, 0.541667, 0.55, 0.558333, 0.566667, 0.575, 0.583333, 0.591667, 0.6),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 1,
"values": [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false]
}

[sub_resource type="Animation" id="Animation_0rya4"]
resource_name = "weak_combo_3"
length = 0.6
step = 0.01
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("left_arm:position")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0, 0.00833333, 0.0166667, 0.025, 0.0333333, 0.0416667, 0.05, 0.0583333, 0.0666667, 0.075, 0.0833333, 0.0916667, 0.1, 0.108333, 0.116667, 0.125, 0.133333, 0.141667, 0.15, 0.158333, 0.166667, 0.175, 0.183333, 0.191667, 0.2, 0.208333, 0.216667, 0.225, 0.233333, 0.241667, 0.25, 0.258333, 0.266667, 0.275, 0.283333, 0.291667, 0.3, 0.308333, 0.316667, 0.325, 0.333333, 0.341667, 0.35, 0.358333, 0.366667, 0.375, 0.383333, 0.391667, 0.4, 0.408333, 0.416667, 0.425, 0.433333, 0.441667, 0.45, 0.458333, 0.466667, 0.475, 0.483333, 0.491667, 0.5, 0.508333, 0.516667, 0.525, 0.533333, 0.541667, 0.55, 0.558333, 0.566667, 0.575, 0.583333, 0.591667, 0.6),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 0,
"values": [Vector3(-0.490746, 0.439253, -1.05854), Vector3(-0.494307, 0.41202, -0.99089), Vector3(-0.497868, 0.384788, -0.923241), Vector3(-0.501429, 0.357555, -0.855591), Vector3(-0.50499, 0.330323, -0.787941), Vector3(-0.508551, 0.30309, -0.720291), Vector3(-0.512112, 0.275858, -0.652642), Vector3(-0.515674, 0.248625, -0.584992), Vector3(-0.519235, 0.221392, -0.517342), Vector3(-0.522796, 0.19416, -0.449693), Vector3(-0.526357, 0.166927, -0.382043), Vector3(-0.529918, 0.139695, -0.314393), Vector3(-0.533479, 0.112462, -0.246744), Vector3(-0.53704, 0.0852294, -0.179094), Vector3(-0.540601, 0.0579969, -0.111444), Vector3(-0.544162, 0.0307643, -0.0437944), Vector3(-0.547723, 0.00353166, 0.0238553), Vector3(-0.551284, -0.0237009, 0.0915051), Vector3(-0.554846, -0.0509335, 0.159155), Vector3(-0.558407, -0.078166, 0.226804), Vector3(-0.561968, -0.105399, 0.294454), Vector3(-0.565529, -0.132631, 0.362104), Vector3(-0.56909, -0.159864, 0.429754), Vector3(-0.572651, -0.187096, 0.497403), Vector3(-0.576212, -0.214329, 0.565053), Vector3(-0.560162, -0.127146, 0.32195), Vector3(-0.544113, -0.039962, 0.0788464), Vector3(-0.528063, 0.0472215, -0.164257), Vector3(-0.512014, 0.134405, -0.40736), Vector3(-0.495964, 0.221588, -0.650464), Vector3(-0.479915, 0.308772, -0.893567), Vector3(-0.492616, 0.30142, -0.872292), Vector3(-0.505316, 0.294069, -0.851016), Vector3(-0.518017, 0.286717, -0.829741), Vector3(-0.530717, 0.279365, -0.808465), Vector3(-0.543418, 0.272013, -0.78719), Vector3(-0.556119, 0.264662, -0.765915), Vector3(-0.568819, 0.25731, -0.744639), Vector3(-0.58152, 0.249958, -0.723364), Vector3(-0.59422, 0.242607, -0.702088), Vector3(-0.606921, 0.235255, -0.680813), Vector3(-0.619622, 0.227903, -0.659538), Vector3(-0.632322, 0.220551, -0.638262), Vector3(-0.645023, 0.2132, -0.616987), Vector3(-0.657723, 0.205848, -0.595711), Vector3(-0.670424, 0.198496, -0.574436), Vector3(-0.683125, 0.191145, -0.553161), Vector3(-0.695825, 0.183793, -0.531885), Vector3(-0.708526, 0.176441, -0.51061), Vector3(-0.721226, 0.169089, -0.489334), Vector3(-0.733927, 0.161738, -0.468059), Vector3(-0.746627, 0.154386, -0.446784), Vector3(-0.759328, 0.147034, -0.425508), Vector3(-0.772029, 0.139683, -0.404233), Vector3(-0.784729, 0.132331, -0.382957), Vector3(-0.79743, 0.124979, -0.361682), Vector3(-0.81013, 0.117627, -0.340407), Vector3(-0.822831, 0.110276, -0.319131), Vector3(-0.835532, 0.102924, -0.297856), Vector3(-0.848232, 0.0955723, -0.27658), Vector3(-0.860933, 0.0882206, -0.255305), Vector3(-0.873633, 0.0808689, -0.23403), Vector3(-0.886334, 0.0735171, -0.212754), Vector3(-0.899035, 0.0661654, -0.191479), Vector3(-0.911735, 0.0588137, -0.170203), Vector3(-0.924436, 0.051462, -0.148928), Vector3(-0.937136, 0.0441103, -0.127652), Vector3(-0.949837, 0.0367586, -0.106377), Vector3(-0.962538, 0.0294069, -0.0851017), Vector3(-0.975238, 0.0220552, -0.0638263), Vector3(-0.987939, 0.0147035, -0.0425509), Vector3(-1.00064, 0.00735176, -0.0212755), Vector3(-1.01334, 0, 0)]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath("left_arm:rotation")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0, 0.00833333, 0.0166667, 0.025, 0.0333333, 0.0416667, 0.05, 0.0583333, 0.0666667, 0.075, 0.0833333, 0.0916667, 0.1, 0.108333, 0.116667, 0.125, 0.133333, 0.141667, 0.15, 0.158333, 0.166667, 0.175, 0.183333, 0.191667, 0.2, 0.208333, 0.216667, 0.225, 0.233333, 0.241667, 0.25, 0.258333, 0.266667, 0.275, 0.283333, 0.291667, 0.3, 0.308333, 0.316667, 0.325, 0.333333, 0.341667, 0.35, 0.358333, 0.366667, 0.375, 0.383333, 0.391667, 0.4, 0.408333, 0.416667, 0.425, 0.433333, 0.441667, 0.45, 0.458333, 0.466667, 0.475, 0.483333, 0.491667, 0.5, 0.508333, 0.516667, 0.525, 0.533333, 0.541667, 0.55, 0.558333, 0.566667, 0.575, 0.583333, 0.591667, 0.6),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 0,
"values": [Vector3(0.509556, 1.02542, -0.454049), Vector3(0.517207, 1.03697, -0.490565), Vector3(0.524857, 1.04851, -0.527082), Vector3(0.532508, 1.06006, -0.563598), Vector3(0.540159, 1.0716, -0.600114), Vector3(0.547809, 1.08315, -0.63663), Vector3(0.55546, 1.09469, -0.673147), Vector3(0.563111, 1.10624, -0.709663), Vector3(0.570761, 1.11778, -0.746179), Vector3(0.578412, 1.12933, -0.782696), Vector3(0.586063, 1.14087, -0.819212), Vector3(0.593713, 1.15242, -0.855728), Vector3(0.601364, 1.16396, -0.892245), Vector3(0.609015, 1.17551, -0.928761), Vector3(0.616665, 1.18706, -0.965277), Vector3(0.624316, 1.1986, -1.00179), Vector3(0.631967, 1.21015, -1.03831), Vector3(0.639617, 1.22169, -1.07483), Vector3(0.647268, 1.23324, -1.11134), Vector3(0.654919, 1.24478, -1.14786), Vector3(0.662569, 1.25633, -1.18437), Vector3(0.67022, 1.26787, -1.22089), Vector3(0.677871, 1.27942, -1.25741), Vector3(0.685521, 1.29096, -1.29392), Vector3(0.693172, 1.30251, -1.33044), Vector3(0.564908, 1.28913, -1.25775), Vector3(0.436644, 1.27574, -1.18506), Vector3(0.30838, 1.26236, -1.11238), Vector3(0.180116, 1.24898, -1.03969), Vector3(0.051852, 1.23559, -0.967001), Vector3(-0.076412, 1.22221, -0.894313), Vector3(-0.0756696, 1.20677, -0.900649), Vector3(-0.0749273, 1.19133, -0.906984), Vector3(-0.0741849, 1.17588, -0.91332), Vector3(-0.0734426, 1.16044, -0.919656), Vector3(-0.0727002, 1.145, -0.925991), Vector3(-0.0719579, 1.12956, -0.932327), Vector3(-0.0712155, 1.11411, -0.938662), Vector3(-0.0704732, 1.09867, -0.944998), Vector3(-0.0697308, 1.08323, -0.951334), Vector3(-0.0689885, 1.06779, -0.957669), Vector3(-0.0682461, 1.05235, -0.964005), Vector3(-0.0675038, 1.0369, -0.970341), Vector3(-0.0667614, 1.02146, -0.976676), Vector3(-0.0660191, 1.00602, -0.983012), Vector3(-0.0652767, 0.990578, -0.989348), Vector3(-0.0645344, 0.975136, -0.995683), Vector3(-0.063792, 0.959694, -1.00202), Vector3(-0.0630497, 0.944251, -1.00835), Vector3(-0.0623073, 0.928809, -1.01469), Vector3(-0.061565, 0.913367, -1.02103), Vector3(-0.0608226, 0.897925, -1.02736), Vector3(-0.0600802, 0.882483, -1.0337), Vector3(-0.0593379, 0.867041, -1.04003), Vector3(-0.0585955, 0.851599, -1.04637), Vector3(-0.0578532, 0.836156, -1.0527), Vector3(-0.0571108, 0.820714, -1.05904), Vector3(-0.0563685, 0.805272, -1.06538), Vector3(-0.0556261, 0.78983, -1.07171), Vector3(-0.0548838, 0.774388, -1.07805), Vector3(-0.0541414, 0.758946, -1.08438), Vector3(-0.0533991, 0.743504, -1.09072), Vector3(-0.0526567, 0.728061, -1.09705), Vector3(-0.0519144, 0.712619, -1.10339), Vector3(-0.051172, 0.697177, -1.10972), Vector3(-0.0504297, 0.681735, -1.11606), Vector3(-0.0496873, 0.666293, -1.1224), Vector3(-0.048945, 0.650851, -1.12873), Vector3(-0.0482026, 0.635409, -1.13507), Vector3(-0.0474603, 0.619966, -1.1414), Vector3(-0.0467179, 0.604524, -1.14774), Vector3(-0.0459756, 0.589082, -1.15407), Vector3(-0.0452332, 0.57364, -1.16041)]
}
tracks/2/type = "value"
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/path = NodePath("right_arm:position")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/keys = {
"times": PackedFloat32Array(0, 0.00833333, 0.0166667, 0.025, 0.0333333, 0.0416667, 0.05, 0.0583333, 0.0666667, 0.075, 0.0833333, 0.0916667, 0.1, 0.108333, 0.116667, 0.125, 0.133333, 0.141667, 0.15, 0.158333, 0.166667, 0.175, 0.183333, 0.191667, 0.2, 0.208333, 0.216667, 0.225, 0.233333, 0.241667, 0.25, 0.258333, 0.266667, 0.275, 0.283333, 0.291667, 0.3, 0.308333, 0.316667, 0.325, 0.333333, 0.341667, 0.35, 0.358333, 0.366667, 0.375, 0.383333, 0.391667, 0.4, 0.408333, 0.416667, 0.425, 0.433333, 0.441667, 0.45, 0.458333, 0.466667, 0.475, 0.483333, 0.491667, 0.5, 0.508333, 0.516667, 0.525, 0.533333, 0.541667, 0.55, 0.558333, 0.566667, 0.575, 0.583333, 0.591667, 0.6),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 0,
"values": [Vector3(1.05112, -0.202638, 0.0109913), Vector3(1.03105, -0.202638, 0.035888), Vector3(1.01098, -0.202638, 0.0607847), Vector3(0.990916, -0.202638, 0.0856814), Vector3(0.970847, -0.202638, 0.110578), Vector3(0.950779, -0.202638, 0.135475), Vector3(0.930711, -0.202638, 0.160371), Vector3(0.910643, -0.202638, 0.185268), Vector3(0.890575, -0.202638, 0.210165), Vector3(0.870507, -0.202638, 0.235062), Vector3(0.850438, -0.202638, 0.259958), Vector3(0.83037, -0.202638, 0.284855), Vector3(0.810302, -0.202638, 0.309752), Vector3(0.790234, -0.202638, 0.334648), Vector3(0.770166, -0.202638, 0.359545), Vector3(0.750098, -0.202638, 0.384442), Vector3(0.730029, -0.202638, 0.409338), Vector3(0.709961, -0.202638, 0.434235), Vector3(0.689893, -0.202638, 0.459132), Vector3(0.669825, -0.202638, 0.484029), Vector3(0.649757, -0.202638, 0.508925), Vector3(0.629689, -0.202638, 0.533822), Vector3(0.60962, -0.202638, 0.558719), Vector3(0.589552, -0.202638, 0.583615), Vector3(0.569484, -0.202638, 0.608512), Vector3(0.563272, -0.113044, 0.369335), Vector3(0.557061, -0.0234497, 0.130157), Vector3(0.550849, 0.0661445, -0.10902), Vector3(0.544638, 0.155739, -0.348197), Vector3(0.538427, 0.245333, -0.587375), Vector3(0.532215, 0.334927, -0.826552), Vector3(0.54457, 0.322128, -0.80661), Vector3(0.556925, 0.309329, -0.786669), Vector3(0.56928, 0.29653, -0.766727), Vector3(0.581635, 0.28373, -0.746786), Vector3(0.593989, 0.270931, -0.726844), Vector3(0.606344, 0.258132, -0.706903), Vector3(0.618699, 0.245333, -0.686961), Vector3(0.631054, 0.232534, -0.66702), Vector3(0.643409, 0.219734, -0.647078), Vector3(0.655764, 0.206935, -0.627137), Vector3(0.668119, 0.194136, -0.607195), Vector3(0.680474, 0.181337, -0.587254), Vector3(0.692828, 0.168538, -0.567312), Vector3(0.705183, 0.155739, -0.547371), Vector3(0.717538, 0.14294, -0.527429), Vector3(0.729893, 0.13014, -0.507488), Vector3(0.742248, 0.117341, -0.487546), Vector3(0.754603, 0.104542, -0.467605), Vector3(0.766958, 0.0917428, -0.447663), Vector3(0.779313, 0.0789437, -0.427722), Vector3(0.791667, 0.0661445, -0.40778), Vector3(0.804022, 0.0533454, -0.387839), Vector3(0.816377, 0.0405462, -0.367897), Vector3(0.828732, 0.027747, -0.347956), Vector3(0.841087, 0.0149479, -0.328014), Vector3(0.853442, 0.00214869, -0.308073), Vector3(0.865797, -0.0106505, -0.288131), Vector3(0.878152, -0.0234497, -0.26819), Vector3(0.890507, -0.0362488, -0.248248), Vector3(0.902861, -0.049048, -0.228307), Vector3(0.915216, -0.0618471, -0.208365), Vector3(0.927571, -0.0746464, -0.188424), Vector3(0.939926, -0.0874455, -0.168482), Vector3(0.952281, -0.100245, -0.148541), Vector3(0.964636, -0.113044, -0.128599), Vector3(0.976991, -0.125843, -0.108658), Vector3(0.989346, -0.138642, -0.0887163), Vector3(1.0017, -0.151441, -0.0687748), Vector3(1.01406, -0.16424, -0.0488333), Vector3(1.02641, -0.17704, -0.0288918), Vector3(1.03877, -0.189839, -0.00895029), Vector3(1.05112, -0.202638, 0.0109913)]
}
tracks/3/type = "value"
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/path = NodePath("right_arm:rotation")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/keys = {
"times": PackedFloat32Array(0, 0.00833333, 0.0166667, 0.025, 0.0333333, 0.0416667, 0.05, 0.0583333, 0.0666667, 0.075, 0.0833333, 0.0916667, 0.1, 0.108333, 0.116667, 0.125, 0.133333, 0.141667, 0.15, 0.158333, 0.166667, 0.175, 0.183333, 0.191667, 0.2, 0.208333, 0.216667, 0.225, 0.233333, 0.241667, 0.25, 0.258333, 0.266667, 0.275, 0.283333, 0.291667, 0.3, 0.308333, 0.316667, 0.325, 0.333333, 0.341667, 0.35, 0.358333, 0.366667, 0.375, 0.383333, 0.391667, 0.4, 0.408333, 0.416667, 0.425, 0.433333, 0.441667, 0.45, 0.458333, 0.466667, 0.475, 0.483333, 0.491667, 0.5, 0.508333, 0.516667, 0.525, 0.533333, 0.541667, 0.55, 0.558333, 0.566667, 0.575, 0.583333, 0.591667, 0.6),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 0,
"values": [Vector3(0, -0.63324, 0.924414), Vector3(-0.00493529, -0.655422, 0.94396), Vector3(-0.00987058, -0.677604, 0.963505), Vector3(-0.0148059, -0.699786, 0.983051), Vector3(-0.0197412, -0.721968, 1.0026), Vector3(-0.0246765, -0.74415, 1.02214), Vector3(-0.0296117, -0.766333, 1.04169), Vector3(-0.034547, -0.788515, 1.06123), Vector3(-0.0394823, -0.810697, 1.08078), Vector3(-0.0444176, -0.832879, 1.10032), Vector3(-0.0493529, -0.855061, 1.11987), Vector3(-0.0542882, -0.877243, 1.13942), Vector3(-0.0592235, -0.899425, 1.15896), Vector3(-0.0641588, -0.921607, 1.17851), Vector3(-0.0690941, -0.943789, 1.19805), Vector3(-0.0740294, -0.965971, 1.2176), Vector3(-0.0789647, -0.988153, 1.23714), Vector3(-0.0839, -1.01034, 1.25669), Vector3(-0.0888352, -1.03252, 1.27624), Vector3(-0.0937705, -1.0547, 1.29578), Vector3(-0.0987058, -1.07688, 1.31533), Vector3(-0.103641, -1.09906, 1.33487), Vector3(-0.108576, -1.12125, 1.35442), Vector3(-0.113512, -1.14343, 1.37396), Vector3(-0.118447, -1.16561, 1.39351), Vector3(-0.116361, -1.18055, 1.31198), Vector3(-0.114276, -1.19549, 1.23045), Vector3(-0.11219, -1.21043, 1.14891), Vector3(-0.110105, -1.22537, 1.06738), Vector3(-0.10802, -1.24031, 0.98585), Vector3(-0.105934, -1.25525, 0.904318), Vector3(-0.104406, -1.24046, 0.905528), Vector3(-0.102878, -1.22567, 0.906737), Vector3(-0.10135, -1.21089, 0.907947), Vector3(-0.0998226, -1.1961, 0.909156), Vector3(-0.0982947, -1.18131, 0.910366), Vector3(-0.0967669, -1.16652, 0.911575), Vector3(-0.095239, -1.15173, 0.912785), Vector3(-0.0937112, -1.13695, 0.913994), Vector3(-0.0921833, -1.12216, 0.915204), Vector3(-0.0906555, -1.10737, 0.916413), Vector3(-0.0891276, -1.09258, 0.917623), Vector3(-0.0875997, -1.07779, 0.918833), Vector3(-0.0860719, -1.06301, 0.920042), Vector3(-0.084544, -1.04822, 0.921252), Vector3(-0.0830162, -1.03343, 0.922461), Vector3(-0.0814883, -1.01864, 0.923671), Vector3(-0.0799605, -1.00385, 0.92488), Vector3(-0.0784326, -0.989067, 0.92609), Vector3(-0.0769048, -0.974279, 0.927299), Vector3(-0.0753769, -0.959491, 0.928509), Vector3(-0.0738491, -0.944703, 0.929718), Vector3(-0.0723212, -0.929915, 0.930928), Vector3(-0.0707933, -0.915127, 0.932138), Vector3(-0.0692655, -0.900339, 0.933347), Vector3(-0.0677376, -0.885551, 0.934557), Vector3(-0.0662098, -0.870763, 0.935766), Vector3(-0.0646819, -0.855975, 0.936976), Vector3(-0.0631541, -0.841187, 0.938185), Vector3(-0.0616262, -0.826399, 0.939395), Vector3(-0.0600984, -0.811611, 0.940604), Vector3(-0.0585705, -0.796824, 0.941814), Vector3(-0.0570427, -0.782035, 0.943024), Vector3(-0.0555148, -0.767248, 0.944233), Vector3(-0.0539869, -0.75246, 0.945443), Vector3(-0.0524591, -0.737672, 0.946652), Vector3(-0.0509312, -0.722884, 0.947862), Vector3(-0.0494034, -0.708096, 0.949071), Vector3(-0.0478755, -0.693308, 0.950281), Vector3(-0.0463477, -0.67852, 0.95149), Vector3(-0.0448198, -0.663732, 0.9527), Vector3(-0.043292, -0.648944, 0.953909), Vector3(-0.0417641, -0.634156, 0.955119)]
}
tracks/4/type = "value"
tracks/4/imported = false
tracks/4/enabled = true
tracks/4/path = NodePath(".:block_inputs")
tracks/4/interp = 1
tracks/4/loop_wrap = true
tracks/4/keys = {
"times": PackedFloat32Array(0, 0.00833333, 0.0166667, 0.025, 0.0333333, 0.0416667, 0.05, 0.0583333, 0.0666667, 0.075, 0.0833333, 0.0916667, 0.1, 0.108333, 0.116667, 0.125, 0.133333, 0.141667, 0.15, 0.158333, 0.166667, 0.175, 0.183333, 0.191667, 0.2, 0.208333, 0.216667, 0.225, 0.233333, 0.241667, 0.25, 0.258333, 0.266667, 0.275, 0.283333, 0.291667, 0.3, 0.308333, 0.316667, 0.325, 0.333333, 0.341667, 0.35, 0.358333, 0.366667, 0.375, 0.383333, 0.391667, 0.4, 0.408333, 0.416667, 0.425, 0.433333, 0.441667, 0.45, 0.458333, 0.466667, 0.475, 0.483333, 0.491667, 0.5, 0.508333, 0.516667, 0.525, 0.533333, 0.541667, 0.55, 0.558333, 0.566667, 0.575, 0.583333, 0.591667, 0.6),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 1,
"values": [true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true]
}
tracks/5/type = "value"
tracks/5/imported = false
tracks/5/enabled = true
tracks/5/path = NodePath("left_arm/left_meleebox:enabled")
tracks/5/interp = 1
tracks/5/loop_wrap = true
tracks/5/keys = {
"times": PackedFloat32Array(0, 0.00833333, 0.0166667, 0.025, 0.0333333, 0.0416667, 0.05, 0.0583333, 0.0666667, 0.075, 0.0833333, 0.0916667, 0.1, 0.108333, 0.116667, 0.125, 0.133333, 0.141667, 0.15, 0.158333, 0.166667, 0.175, 0.183333, 0.191667, 0.2, 0.208333, 0.216667, 0.225, 0.233333, 0.241667, 0.25, 0.258333, 0.266667, 0.275, 0.283333, 0.291667, 0.3, 0.308333, 0.316667, 0.325, 0.333333, 0.341667, 0.35, 0.358333, 0.366667, 0.375, 0.383333, 0.391667, 0.4, 0.408333, 0.416667, 0.425, 0.433333, 0.441667, 0.45, 0.458333, 0.466667, 0.475, 0.483333, 0.491667, 0.5, 0.508333, 0.516667, 0.525, 0.533333, 0.541667, 0.55, 0.558333, 0.566667, 0.575, 0.583333, 0.591667, 0.6),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 1,
"values": [true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false]
}
tracks/6/type = "value"
tracks/6/imported = false
tracks/6/enabled = true
tracks/6/path = NodePath("right_arm/right_meleebox:enabled")
tracks/6/interp = 1
tracks/6/loop_wrap = true
tracks/6/keys = {
"times": PackedFloat32Array(0, 0.00833333, 0.0166667, 0.025, 0.0333333, 0.0416667, 0.05, 0.0583333, 0.0666667, 0.075, 0.0833333, 0.0916667, 0.1, 0.108333, 0.116667, 0.125, 0.133333, 0.141667, 0.15, 0.158333, 0.166667, 0.175, 0.183333, 0.191667, 0.2, 0.208333, 0.216667, 0.225, 0.233333, 0.241667, 0.25, 0.258333, 0.266667, 0.275, 0.283333, 0.291667, 0.3, 0.308333, 0.316667, 0.325, 0.333333, 0.341667, 0.35, 0.358333, 0.366667, 0.375, 0.383333, 0.391667, 0.4, 0.408333, 0.416667, 0.425, 0.433333, 0.441667, 0.45, 0.458333, 0.466667, 0.475, 0.483333, 0.491667, 0.5, 0.508333, 0.516667, 0.525, 0.533333, 0.541667, 0.55, 0.558333, 0.566667, 0.575, 0.583333, 0.591667, 0.6),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 1,
"values": [true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false]
}

[sub_resource type="AnimationLibrary" id="AnimationLibrary_p4vvf"]
_data = {
"RESET": SubResource("Animation_gglua"),
"idle": SubResource("Animation_apok5"),
"weak_combo_1": SubResource("Animation_co871"),
"weak_combo_2": SubResource("Animation_vk3ux"),
"weak_combo_3": SubResource("Animation_0rya4")
}

[sub_resource type="BoxShape3D" id="BoxShape3D_2bdk0"]
size = Vector3(2.545, 1, 0.435)

[node name="item" type="Node3D"]
script = ExtResource("1_fivw0")
display_name = "Fists"
item_type = "MeleeWeapon"
hands = 1
first_person_position = Vector3(-0.04, -0.6, -0.23)
damage = [0.0, 10.0, 0.0]
crit_chance = 2.0
crit_modifier = 1.25

[node name="right_arm" type="Node3D" parent="."]
transform = Transform3D(0.436972, -0.579146, -0.532584, 0.718441, 0.542072, 0, 0.320776, -0.425144, 0.725503, 1.05112, -0.202638, 0.0109913)

[node name="arm" parent="right_arm" instance=ExtResource("2_vjey0")]

[node name="hand" parent="right_arm/arm/arm2/Skeleton3D" index="0"]
transform = Transform3D(0.997499, -0.0328353, -0.0625983, 0.0323772, 0.999441, -0.00831851, 0.0628363, 0.00627109, 0.998004, 0, 0, 0)
cast_shadow = 0
surface_material_override/0 = ExtResource("3_gs4co")
surface_material_override/1 = ExtResource("4_70cc1")

[node name="right_meleebox" parent="right_arm" instance=ExtResource("5_jauwc")]
transform = Transform3D(-9, 1.56462e-07, -2.98023e-08, -1.2517e-06, -1, 0, -5.96046e-08, 2.98023e-08, 9, 0, 0, 0)

[node name="left_arm" type="Node3D" parent="."]
transform = Transform3D(0.32195, 0.684546, 0.48759, -0.814424, 0.383033, 0, -0.207515, -0.441228, 0.756476, -1.01334, 0, 0)

[node name="arm" parent="left_arm" instance=ExtResource("2_vjey0")]

[node name="hand" parent="left_arm/arm/arm2/Skeleton3D" index="0"]
transform = Transform3D(1, 2.98023e-08, 4.65886e-09, 2.98023e-08, 1, 2.75609e-08, 1.34279e-08, 2.33419e-08, 1, 0, 0, 0)
layers = 524289
cast_shadow = 0
surface_material_override/0 = ExtResource("3_gs4co")
surface_material_override/1 = ExtResource("4_70cc1")

[node name="left_meleebox" parent="left_arm" instance=ExtResource("5_jauwc")]
transform = Transform3D(-9, 1.78814e-07, 0, -1.43051e-06, -1, 0, 0, -7.45058e-09, 9, 0, 0, 0)

[node name="AnimationPlayer" type="AnimationPlayer" parent="."]
libraries = {
"": SubResource("AnimationLibrary_p4vvf")
}

[node name="CollisionShape3D" type="CollisionShape3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0.0944496, -0.179488)
shape = SubResource("BoxShape3D_2bdk0")
disabled = true

[editable path="right_arm/arm"]
[editable path="left_arm/arm"]
[editable path="left_arm/left_meleebox"]
